{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ntws2/Dropbox/htdocs/ECCPEC_code/SITE_VERSIONS/ECPPEC/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/ntws2/Dropbox/htdocs/ECCPEC_code/SITE_VERSIONS/ECPPEC/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ntws2/Dropbox/htdocs/ECCPEC_code/SITE_VERSIONS/ECPPEC/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { fromEvent } from 'rxjs';\nimport { Directive, ElementRef, Renderer2, Input, Output, HostListener, EventEmitter, NgModule } from '@angular/core';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nvar Position = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} x\r\n   * @param {?} y\r\n   * @param {?=} rotate\r\n   * @param {?=} scaleX\r\n   * @param {?=} scaleY\r\n   */\n  function Position(x, y) {\n    var rotate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var scaleX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var scaleY = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n    _classCallCheck(this, Position);\n\n    this.x = x;\n    this.y = y;\n    this.rotate = rotate;\n    this.scaleX = scaleX;\n    this.scaleY = scaleY;\n  }\n  /**\r\n   * @param {?} e\r\n   * @param {?=} el\r\n   * @return {?}\r\n   */\n\n\n  _createClass(Position, [{\n    key: \"add\",\n\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\n    value: function add(p) {\n      /** @type {?} */\n      this.x += p.x;\n\n      /** @type {?} */\n      this.y += p.y;\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(p) {\n      /** @type {?} */\n      this.x -= p.x;\n\n      /** @type {?} */\n      this.y -= p.y;\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n    /**\r\n     * @param {?} n\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"multiply\",\n    value: function multiply(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n    /**\r\n     * @param {?} n\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"divide\",\n    value: function divide(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      /** @type {?} */\n      this.x = 0;\n\n      /** @type {?} */\n      this.y = 0;\n\n      /** @type {?} */\n      this.rotate = 0;\n\n      /** @type {?} */\n      this.scaleX = 1;\n\n      /** @type {?} */\n      this.scaleY = 1;\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(p) {\n      /** @type {?} */\n      this.x = p.x;\n\n      /** @type {?} */\n      this.y = p.y;\n\n      /** @type {?} */\n      this.rotate = p.rotate;\n\n      /** @type {?} */\n      this.scaleY = p.scaleY;\n\n      /** @type {?} */\n      this.scaleX = p.scaleX;\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n  }, {\n    key: \"value\",\n\n    /**\r\n     * @return {?}\r\n     */\n    get: function get() {\n      return {\n        x: this.x,\n        y: this.y,\n        rotate: this.rotate,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY\n      };\n    }\n  }], [{\n    key: \"fromEvent\",\n    value: function fromEvent(e) {\n      var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      /**\r\n       * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n       * https://github.com/xieziyu/ngx-draggable-resize/issues/164\r\n       * e instanceof MouseEvent check returns false on IE11\r\n       */\n      if (this.isMouseEvent(e)) {\n        return new Position(e.clientX, e.clientY);\n      } else {\n        if (el === null || e.changedTouches.length === 1) {\n          return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        }\n        /**\r\n         * Fix issue: Multiple phone draggables at the same time\r\n         * https://github.com/xieziyu/ngx-draggable-resize/issues/128\r\n         */\n\n\n        for (var i = 0; i < e.changedTouches.length; i++) {\n          if (e.changedTouches[i].target === el) {\n            return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\n          }\n        }\n      }\n    }\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"isMouseEvent\",\n    value: function isMouseEvent(e) {\n      return Object.prototype.toString.apply(e).indexOf(\"MouseEvent\") === 8;\n    }\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"isIPosition\",\n    value: function isIPosition(obj) {\n      return !!obj && \"x\" in obj && \"y\" in obj;\n    }\n    /**\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getCurrent\",\n    value: function getCurrent(el) {\n      /** @type {?} */\n      var pos = new Position(0, 0, 0, 0, 0);\n\n      if (window) {\n        /** @type {?} */\n        var computed = window.getComputedStyle(el);\n\n        if (computed) {\n          /** @type {?} */\n          var x = parseInt(computed.getPropertyValue(\"left\"), 10);\n          /** @type {?} */\n\n          var y = parseInt(computed.getPropertyValue(\"top\"), 10);\n          pos.x = isNaN(x) ? 0 : x;\n          pos.y = isNaN(y) ? 0 : y;\n        }\n\n        return pos;\n      } else {\n        console.error(\"Not Supported!\");\n        return null;\n      }\n    }\n    /**\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"copy\",\n    value: function copy(p) {\n      return new Position(0, 0, 0, 1, 1).set(p);\n    }\n  }]);\n\n  return Position;\n}();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar HelperBlock = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} parent\r\n   * @param {?} renderer\r\n   */\n  function HelperBlock(parent, renderer) {\n    _classCallCheck(this, HelperBlock);\n\n    this.parent = parent;\n    this.renderer = renderer;\n    this._added = false; // generate helper div\n\n    /** @type {?} */\n\n    var helper = renderer.createElement('div');\n    renderer.setStyle(helper, 'position', 'absolute');\n    renderer.setStyle(helper, 'width', '100%');\n    renderer.setStyle(helper, 'height', '100%');\n    renderer.setStyle(helper, 'background-color', 'transparent');\n    renderer.setStyle(helper, 'top', '0');\n    renderer.setStyle(helper, 'left', '0'); // done\n\n    this._helper = helper;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(HelperBlock, [{\n    key: \"add\",\n    value: function add() {\n      // append div to parent\n      if (this.parent && !this._added) {\n        this.parent.appendChild(this._helper);\n        this._added = true;\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.parent && this._added) {\n        this.parent.removeChild(this._helper);\n        this._added = false;\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._helper = null;\n      this._added = false;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this._helper;\n    }\n  }]);\n\n  return HelperBlock;\n}();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar AngularDraggableDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} el\r\n   * @param {?} renderer\r\n   */\n  function AngularDraggableDirective(el, renderer) {\n    _classCallCheck(this, AngularDraggableDirective);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.allowDrag = true;\n    this.moving = false;\n    this.orignal = null;\n    this.oldTrans = new Position(0, 0, 0, 1, 1);\n    this.tempTrans = new Position(0, 0, 0, 1, 1);\n    this.currTrans = new Position(0, 0, 0, 1, 1);\n    this.oldZIndex = \"\";\n    this._zIndex = \"\";\n    this.needTransform = false;\n    this.draggingSub = null;\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/ngx-draggable-resize/issues/84\r\n     */\n\n    this._helperBlock = null;\n    this.started = new EventEmitter();\n    this.stopped = new EventEmitter();\n    this.edge = new EventEmitter();\n    /**\r\n     * List of allowed out of bounds edges *\r\n     */\n\n    this.outOfBounds = {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false\n    };\n    /**\r\n     * Round the position to nearest grid\r\n     */\n\n    this.gridSize = 1;\n    /**\r\n     * Whether to limit the element stay in the bounds\r\n     */\n\n    this.inBounds = false;\n    /**\r\n     * Whether the element should use it's previous drag position on a new drag event.\r\n     */\n\n    this.trackPosition = true;\n    /**\r\n     * Input css scale transform of element so translations are correct\r\n     */\n\n    this.scale = 1;\n    /**\r\n     * Whether to prevent default event\r\n     */\n\n    this.preventDefaultEvent = false;\n    /**\r\n     * Set initial position by offsets\r\n     */\n\n    this.position = {\n      x: 0,\n      y: 0,\n      rotate: 0,\n      scaleX: 1,\n      scaleY: 1\n    };\n    /**\r\n     * Lock axis: 'x' or 'y'\r\n     */\n\n    this.lockAxis = null;\n    /**\r\n     * Emit position offsets when moving\r\n     */\n\n    this.movingOffset = new EventEmitter();\n    /**\r\n     * Emit position offsets when put back\r\n     */\n\n    this.endOffset = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  /**\r\n   * Set z-index when not dragging\r\n   * @param {?} setting\r\n   * @return {?}\r\n   */\n\n\n  _createClass(AngularDraggableDirective, [{\n    key: \"ngOnInit\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function ngOnInit() {\n      if (this.allowDrag) {\n        /** @type {?} */\n        var element = this.getDragEl();\n        this.renderer.addClass(element, \"ng-draggable\");\n      }\n\n      this.resetPosition();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.bounds = null;\n      this.handle = null;\n      this.orignal = null;\n      this.oldTrans = null;\n      this.tempTrans = null;\n      this.currTrans = null;\n\n      this._helperBlock.dispose();\n\n      this._helperBlock = null;\n\n      if (this.draggingSub) {\n        this.draggingSub.unsubscribe();\n      }\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes[\"position\"] && !changes[\"position\"].isFirstChange()) {\n        /** @type {?} */\n        var p = changes[\"position\"].currentValue;\n\n        if (!this.moving) {\n          if (Position.isIPosition(p)) {\n            this.oldTrans.set(p);\n          } else {\n            this.oldTrans.reset();\n          }\n\n          this.transform();\n        } else {\n          this.needTransform = true;\n        }\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.inBounds) {\n        this.boundsCheck();\n        this.oldTrans.add(this.tempTrans);\n        this.tempTrans.reset();\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getDragEl\",\n    value: function getDragEl() {\n      return this.handle ? this.handle : this.el.nativeElement;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resetPosition\",\n    value: function resetPosition() {\n      if (Position.isIPosition(this.position)) {\n        this.oldTrans.set(this.position);\n      } else {\n        this.oldTrans.reset();\n      }\n\n      this.tempTrans.reset();\n      this.transform();\n    }\n    /**\r\n     * @private\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(p) {\n      if (this.orignal) {\n        p.subtract(this.orignal);\n        this.tempTrans.set(p);\n        this.tempTrans.divide(this.scale);\n        this.transform();\n\n        if (this.bounds) {\n          this.edge.emit(this.boundsCheck());\n        }\n\n        this.movingOffset.emit(this.currTrans.value);\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"transform\",\n    value: function transform() {\n      /** @type {?} */\n      var translateX = this.tempTrans.x + this.oldTrans.x;\n      /** @type {?} */\n\n      var translateY = this.tempTrans.y + this.oldTrans.y;\n\n      if (this.lockAxis === \"x\") {\n        translateX = this.oldTrans.x;\n        this.tempTrans.x = 0;\n      } else if (this.lockAxis === \"y\") {\n        translateY = this.oldTrans.y;\n        this.tempTrans.y = 0;\n      } // Snap to grid: by grid size\n\n\n      if (this.gridSize > 1) {\n        translateX = Math.round(translateX / this.gridSize) * this.gridSize;\n        translateY = Math.round(translateY / this.gridSize) * this.gridSize;\n      }\n      /** @type {?} */\n\n\n      var value = \"translate(\".concat(Math.round(translateX), \"px, \").concat(Math.round(translateY), \"px)  rotate(\").concat(this.position.rotate, \"deg) scaleX(\").concat(this.position.scaleX, \") scaleY(\").concat(this.position.scaleY, \")\");\n      this.renderer.setStyle(this.el.nativeElement, \"transform\", value);\n      this.renderer.setStyle(this.el.nativeElement, \"-webkit-transform\", value);\n      this.renderer.setStyle(this.el.nativeElement, \"-ms-transform\", value);\n      this.renderer.setStyle(this.el.nativeElement, \"-moz-transform\", value);\n      this.renderer.setStyle(this.el.nativeElement, \"-o-transform\", value); // save current position\n\n      this.currTrans.x = translateX;\n      this.currTrans.y = translateY;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"pickUp\",\n    value: function pickUp() {\n      // get old z-index:\n      this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : \"\";\n\n      if (window) {\n        this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue(\"z-index\");\n      }\n\n      if (this.zIndexMoving) {\n        this.renderer.setStyle(this.el.nativeElement, \"z-index\", this.zIndexMoving);\n      }\n\n      if (!this.moving) {\n        this.started.emit(this.el.nativeElement);\n        this.moving = true;\n        /** @type {?} */\n\n        var element = this.getDragEl();\n        this.renderer.addClass(element, \"ng-dragging\");\n        /**\r\n         * Fix performance issue:\r\n         * https://github.com/xieziyu/ngx-draggable-resize/issues/112\r\n         */\n\n        this.subscribeEvents();\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this = this;\n\n      this.draggingSub = fromEvent(document, \"mousemove\", {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @param {?} event\r\n      * @return {?}\r\n      */\n      function (event) {\n        return _this.onMouseMove(\n        /** @type {?} */\n        event);\n      });\n      this.draggingSub.add(fromEvent(document, \"touchmove\", {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @param {?} event\r\n      * @return {?}\r\n      */\n      function (event) {\n        return _this.onMouseMove(\n        /** @type {?} */\n        event);\n      }));\n      this.draggingSub.add(fromEvent(document, \"mouseup\", {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this.putBack();\n      })); // checking if browser is IE or Edge - https://github.com/xieziyu/ngx-draggable-resize/issues/153\n\n      /** @type {?} */\n\n      var isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n\n      if (!isIEOrEdge) {\n        this.draggingSub.add(fromEvent(document, \"mouseleave\", {\n          passive: false\n        }).subscribe(\n        /**\r\n        * @return {?}\r\n        */\n        function () {\n          return _this.putBack();\n        }));\n      }\n\n      this.draggingSub.add(fromEvent(document, \"touchend\", {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this.putBack();\n      }));\n      this.draggingSub.add(fromEvent(document, \"touchcancel\", {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this.putBack();\n      }));\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"unsubscribeEvents\",\n    value: function unsubscribeEvents() {\n      this.draggingSub.unsubscribe();\n      this.draggingSub = null;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"boundsCheck\",\n    value: function boundsCheck() {\n      if (this.bounds) {\n        /** @type {?} */\n        var boundary = this.bounds.getBoundingClientRect();\n        /** @type {?} */\n\n        var elem = this.el.nativeElement.getBoundingClientRect();\n        /** @type {?} */\n\n        var result = {\n          top: this.outOfBounds.top ? true : boundary.top < elem.top,\n          right: this.outOfBounds.right ? true : boundary.right > elem.right,\n          bottom: this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\n          left: this.outOfBounds.left ? true : boundary.left < elem.left\n        };\n\n        if (this.inBounds) {\n          if (!result.top) {\n            this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\n          }\n\n          if (!result.bottom) {\n            this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\n          }\n\n          if (!result.right) {\n            this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\n          }\n\n          if (!result.left) {\n            this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\n          }\n\n          this.transform();\n        }\n\n        return result;\n      }\n    }\n    /**\r\n     * Get current offset\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getCurrentOffset\",\n    value: function getCurrentOffset() {\n      return this.currTrans.value;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"putBack\",\n    value: function putBack() {\n      if (this._zIndex) {\n        this.renderer.setStyle(this.el.nativeElement, \"z-index\", this._zIndex);\n      } else if (this.zIndexMoving) {\n        if (this.oldZIndex) {\n          this.renderer.setStyle(this.el.nativeElement, \"z-index\", this.oldZIndex);\n        } else {\n          this.el.nativeElement.style.removeProperty(\"z-index\");\n        }\n      }\n\n      if (this.moving) {\n        this.stopped.emit(this.el.nativeElement); // Remove the helper div:\n\n        this._helperBlock.remove();\n\n        if (this.needTransform) {\n          if (Position.isIPosition(this.position)) {\n            this.oldTrans.set(this.position);\n          } else {\n            this.oldTrans.reset();\n          }\n\n          this.transform();\n          this.needTransform = false;\n        }\n\n        if (this.bounds) {\n          this.edge.emit(this.boundsCheck());\n        }\n\n        this.moving = false;\n        this.endOffset.emit(this.currTrans.value);\n\n        if (this.trackPosition) {\n          this.oldTrans.add(this.tempTrans);\n        }\n\n        this.tempTrans.reset();\n\n        if (!this.trackPosition) {\n          this.transform();\n        }\n        /** @type {?} */\n\n\n        var element = this.getDragEl();\n        this.renderer.removeClass(element, \"ng-dragging\");\n        /**\r\n         * Fix performance issue:\r\n         * https://github.com/xieziyu/ngx-draggable-resize/issues/112\r\n         */\n\n        this.unsubscribeEvents();\n      }\n    }\n    /**\r\n     * @param {?} target\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"checkHandleTarget\",\n    value: function checkHandleTarget(target, element) {\n      // Checks if the target is the element clicked, then checks each child element of element as well\n      // Ignores button clicks\n      // Ignore elements of type button\n      if (element.tagName === \"BUTTON\") {\n        return false;\n      } // If the target was found, return true (handle was found)\n\n\n      if (element === target) {\n        return true;\n      } // Recursively iterate this elements children\n\n\n      for (var child in element.children) {\n        if (element.children.hasOwnProperty(child)) {\n          if (this.checkHandleTarget(target, element.children[child])) {\n            return true;\n          }\n        }\n      } // Handle was not found in this lineage\n      // Note: return false is ignore unless it is the parent element\n\n\n      return false;\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      // 1. skip right click;\n      if (event instanceof MouseEvent && event.button === 2) {\n        return;\n      } // 2. if handle is set, the element can only be moved by handle\n\n      /** @type {?} */\n\n\n      var target = event.target || event.srcElement;\n\n      if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\n        return;\n      } // 3. if allow drag is set to false, ignore the mousedown\n\n\n      if (this.allowDrag === false) {\n        return;\n      }\n\n      if (this.preventDefaultEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.orignal = Position.fromEvent(event, this.getDragEl());\n      this.pickUp();\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (this.moving && this.allowDrag) {\n        if (this.preventDefaultEvent) {\n          event.stopPropagation();\n          event.preventDefault();\n        } // Add a transparent helper div:\n\n\n        this._helperBlock.add();\n\n        this.moveTo(Position.fromEvent(event, this.getDragEl()));\n      }\n    }\n  }, {\n    key: \"zIndex\",\n    set: function set(setting) {\n      this.renderer.setStyle(this.el.nativeElement, \"z-index\", setting);\n      this._zIndex = setting;\n    }\n    /**\r\n     * @param {?} setting\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngDraggable\",\n    set: function set(setting) {\n      if (setting !== undefined && setting !== null && setting !== \"\") {\n        this.allowDrag = !!setting;\n        /** @type {?} */\n\n        var element = this.getDragEl();\n\n        if (this.allowDrag) {\n          this.renderer.addClass(element, \"ng-draggable\");\n        } else {\n          this.putBack();\n          this.renderer.removeClass(element, \"ng-draggable\");\n        }\n      }\n    }\n  }]);\n\n  return AngularDraggableDirective;\n}();\n\nAngularDraggableDirective.Éµfac = function AngularDraggableDirective_Factory(t) {\n  return new (t || AngularDraggableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2));\n};\n\nAngularDraggableDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: AngularDraggableDirective,\n  selectors: [[\"\", \"ngDraggable\", \"\"]],\n  hostBindings: function AngularDraggableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"mousedown\", function AngularDraggableDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      })(\"touchstart\", function AngularDraggableDirective_touchstart_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n  },\n  inputs: {\n    outOfBounds: \"outOfBounds\",\n    gridSize: \"gridSize\",\n    inBounds: \"inBounds\",\n    trackPosition: \"trackPosition\",\n    scale: \"scale\",\n    preventDefaultEvent: \"preventDefaultEvent\",\n    position: \"position\",\n    lockAxis: \"lockAxis\",\n    zIndex: \"zIndex\",\n    ngDraggable: \"ngDraggable\",\n    bounds: \"bounds\",\n    handle: \"handle\",\n    zIndexMoving: \"zIndexMoving\"\n  },\n  outputs: {\n    started: \"started\",\n    stopped: \"stopped\",\n    edge: \"edge\",\n    movingOffset: \"movingOffset\",\n    endOffset: \"endOffset\"\n  },\n  exportAs: [\"ngDraggable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\n\nAngularDraggableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nAngularDraggableDirective.propDecorators = {\n  started: [{\n    type: Output\n  }],\n  stopped: [{\n    type: Output\n  }],\n  edge: [{\n    type: Output\n  }],\n  handle: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  outOfBounds: [{\n    type: Input\n  }],\n  gridSize: [{\n    type: Input\n  }],\n  zIndexMoving: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  inBounds: [{\n    type: Input\n  }],\n  trackPosition: [{\n    type: Input\n  }],\n  scale: [{\n    type: Input\n  }],\n  preventDefaultEvent: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  lockAxis: [{\n    type: Input\n  }],\n  movingOffset: [{\n    type: Output\n  }],\n  endOffset: [{\n    type: Output\n  }],\n  ngDraggable: [{\n    type: Input\n  }],\n  onMouseDown: [{\n    type: HostListener,\n    args: [\"mousedown\", [\"$event\"]]\n  }, {\n    type: HostListener,\n    args: [\"touchstart\", [\"$event\"]]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[ngDraggable]\",\n      exportAs: \"ngDraggable\"\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.Renderer2\n    }];\n  }, {\n    started: [{\n      type: Output\n    }],\n    stopped: [{\n      type: Output\n    }],\n    edge: [{\n      type: Output\n    }],\n    outOfBounds: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    inBounds: [{\n      type: Input\n    }],\n    trackPosition: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input\n    }],\n    movingOffset: [{\n      type: Output\n    }],\n    endOffset: [{\n      type: Output\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    ngDraggable: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    handle: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown: [{\n      type: HostListener,\n      args: [\"mousedown\", [\"$event\"]]\n    }, {\n      type: HostListener,\n      args: [\"touchstart\", [\"$event\"]]\n    }],\n    zIndexMoving: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar ResizeHandle = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} parent\r\n   * @param {?} renderer\r\n   * @param {?} type\r\n   * @param {?} css\r\n   * @param {?} onMouseDown\r\n   */\n  function ResizeHandle(parent, renderer, type, css, onMouseDown) {\n    var _this2 = this;\n\n    _classCallCheck(this, ResizeHandle);\n\n    this.parent = parent;\n    this.renderer = renderer;\n    this.type = type;\n    this.css = css;\n    this.onMouseDown = onMouseDown; // generate handle div\n\n    /** @type {?} */\n\n    var handle = renderer.createElement('div');\n    renderer.addClass(handle, 'ng-resizable-handle');\n    renderer.addClass(handle, css); // add default diagonal for se handle\n\n    if (type === 'se') {\n      renderer.addClass(handle, 'ng-resizable-diagonal');\n    } // append div to parent\n\n\n    if (this.parent) {\n      parent.appendChild(handle);\n    } // create and register event listener\n\n\n    this._onResize =\n    /**\r\n    * @param {?} event\r\n    * @return {?}\r\n    */\n    function (event) {\n      onMouseDown(event, _this2);\n    };\n\n    handle.addEventListener('mousedown', this._onResize, {\n      passive: false\n    });\n    handle.addEventListener('touchstart', this._onResize, {\n      passive: false\n    }); // done\n\n    this._handle = handle;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(ResizeHandle, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._handle.removeEventListener('mousedown', this._onResize);\n\n      this._handle.removeEventListener('touchstart', this._onResize);\n\n      if (this.parent) {\n        this.parent.removeChild(this._handle);\n      }\n\n      this._handle = null;\n      this._onResize = null;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this._handle;\n    }\n  }]);\n\n  return ResizeHandle;\n}();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar Size = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} width\r\n   * @param {?} height\r\n   */\n  function Size(width, height) {\n    _classCallCheck(this, Size);\n\n    this.width = width;\n    this.height = height;\n  }\n  /**\r\n   * @param {?} el\r\n   * @return {?}\r\n   */\n\n\n  _createClass(Size, [{\n    key: \"set\",\n\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} s\r\n     * @return {THIS}\r\n     */\n    value: function set(s) {\n      /** @type {?} */\n      this.width = s.width;\n\n      /** @type {?} */\n      this.height = s.height;\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n  }], [{\n    key: \"getCurrent\",\n    value: function getCurrent(el) {\n      /** @type {?} */\n      var size = new Size(0, 0);\n\n      if (window) {\n        /** @type {?} */\n        var computed = window.getComputedStyle(el);\n\n        if (computed) {\n          size.width = parseInt(computed.getPropertyValue('width'), 10);\n          size.height = parseInt(computed.getPropertyValue('height'), 10);\n        }\n\n        return size;\n      } else {\n        console.error('Not Supported!');\n        return null;\n      }\n    }\n    /**\r\n     * @param {?} s\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"copy\",\n    value: function copy(s) {\n      return new Size(0, 0).set(s);\n    }\n  }]);\n\n  return Size;\n}();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar AngularResizableDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} el\r\n   * @param {?} renderer\r\n   */\n  function AngularResizableDirective(el, renderer) {\n    _classCallCheck(this, AngularResizableDirective);\n\n    this.el = el;\n    this.renderer = renderer;\n    this._resizable = true;\n    this._handles = {};\n    this._handleType = [];\n    this._handleResizing = null;\n    this._direction = null;\n    this._directionChanged = null;\n    this._aspectRatio = 0;\n    this._containment = null;\n    this._origMousePos = null;\n    /**\r\n     * Original Size and Position\r\n     */\n\n    this._origSize = null;\n    this._origPos = null;\n    /**\r\n     * Current Size and Position\r\n     */\n\n    this._currSize = null;\n    this._currPos = null;\n    /**\r\n     * Initial Size and Position\r\n     */\n\n    this._initSize = null;\n    this._initPos = null;\n    /**\r\n     * Snap to gird\r\n     */\n\n    this._gridSize = null;\n    this._bounding = null;\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/ngx-draggable-resize/issues/84\r\n     */\n\n    this._helperBlock = null;\n    this.draggingSub = null;\n    this._adjusted = false;\n    /**\r\n     * Which handles can be used for resizing.\r\n     * \\@example\r\n     * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n     * equals to: [rzHandles] = \"'all'\"\r\n     *\r\n     *\r\n     */\n\n    this.rzHandles = 'e,s,se';\n    /**\r\n     * Whether the element should be constrained to a specific aspect ratio.\r\n     *  Multiple types supported:\r\n     *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n     *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n     */\n\n    this.rzAspectRatio = false;\n    /**\r\n     * Constrains resizing to within the bounds of the specified element or region.\r\n     *  Multiple types supported:\r\n     *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n     *            If no element is found, no containment will be set.\r\n     *  Element: The resizable element will be contained to the bounding box of this element.\r\n     *  String: Possible values: \"parent\".\r\n     */\n\n    this.rzContainment = null;\n    /**\r\n     * Snaps the resizing element to a grid, every x and y pixels.\r\n     * A number for both width and height or an array values like [ x, y ]\r\n     */\n\n    this.rzGrid = null;\n    /**\r\n     * The minimum width the resizable should be allowed to resize to.\r\n     */\n\n    this.rzMinWidth = null;\n    /**\r\n     * The minimum height the resizable should be allowed to resize to.\r\n     */\n\n    this.rzMinHeight = null;\n    /**\r\n     * The maximum width the resizable should be allowed to resize to.\r\n     */\n\n    this.rzMaxWidth = null;\n    /**\r\n     * The maximum height the resizable should be allowed to resize to.\r\n     */\n\n    this.rzMaxHeight = null;\n    /**\r\n     * Whether to prevent default event\r\n     */\n\n    this.preventDefaultEvent = true;\n    /**\r\n     * emitted when start resizing\r\n     */\n\n    this.rzStart = new EventEmitter();\n    /**\r\n     * emitted when start resizing\r\n     */\n\n    this.rzResizing = new EventEmitter();\n    /**\r\n     * emitted when stop resizing\r\n     */\n\n    this.rzStop = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  /**\r\n   * Disables the resizable if set to false.\r\n   * @param {?} v\r\n   * @return {?}\r\n   */\n\n\n  _createClass(AngularResizableDirective, [{\n    key: \"ngOnChanges\",\n\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n    value: function ngOnChanges(changes) {\n      if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\n        this.updateResizable();\n      }\n\n      if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\n        this.updateAspectRatio();\n      }\n\n      if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\n        this.updateContainment();\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.updateResizable();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeHandles();\n      this._containment = null;\n\n      this._helperBlock.dispose();\n\n      this._helperBlock = null;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      /** @type {?} */\n      var elm = this.el.nativeElement;\n      this._initSize = Size.getCurrent(elm);\n      this._initPos = Position.getCurrent(elm);\n      this._currSize = Size.copy(this._initSize);\n      this._currPos = Position.copy(this._initPos);\n      this.updateAspectRatio();\n      this.updateContainment();\n    }\n    /**\r\n     * A method to reset size\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resetSize\",\n    value: function resetSize() {\n      this._currSize = Size.copy(this._initSize);\n      this._currPos = Position.copy(this._initPos);\n      this.doResize();\n    }\n    /**\r\n     * A method to get current status\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      if (!this._currPos || !this._currSize) {\n        return null;\n      }\n\n      return {\n        size: {\n          width: this._currSize.width,\n          height: this._currSize.height\n        },\n        position: {\n          top: this._currPos.y,\n          left: this._currPos.x\n        }\n      };\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"updateResizable\",\n    value: function updateResizable() {\n      /** @type {?} */\n      var element = this.el.nativeElement; // clear handles:\n\n      this.renderer.removeClass(element, 'ng-resizable');\n      this.removeHandles(); // create new ones:\n\n      if (this._resizable) {\n        this.renderer.addClass(element, 'ng-resizable');\n        this.createHandles();\n      }\n    }\n    /**\r\n     * Use it to update aspect\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"updateAspectRatio\",\n    value: function updateAspectRatio() {\n      if (typeof this.rzAspectRatio === 'boolean') {\n        if (this.rzAspectRatio && this._currSize.height) {\n          this._aspectRatio = this._currSize.width / this._currSize.height;\n        } else {\n          this._aspectRatio = 0;\n        }\n      } else {\n        /** @type {?} */\n        var r = Number(this.rzAspectRatio);\n        this._aspectRatio = isNaN(r) ? 0 : r;\n      }\n    }\n    /**\r\n     * Use it to update containment\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"updateContainment\",\n    value: function updateContainment() {\n      if (!this.rzContainment) {\n        this._containment = null;\n        return;\n      }\n\n      if (typeof this.rzContainment === 'string') {\n        if (this.rzContainment === 'parent') {\n          this._containment = this.el.nativeElement.parentElement;\n        } else {\n          this._containment = document.querySelector(this.rzContainment);\n        }\n      } else {\n        this._containment = this.rzContainment;\n      }\n    }\n    /**\r\n     * Use it to create handle divs\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createHandles\",\n    value: function createHandles() {\n      if (!this.rzHandles) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var tmpHandleTypes;\n\n      if (typeof this.rzHandles === 'string') {\n        if (this.rzHandles === 'all') {\n          tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\n        } else {\n          tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\n        }\n\n        var _iterator = _createForOfIteratorHelper(tmpHandleTypes),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var type = _step.value;\n            // default handle theme: ng-resizable-$type.\n\n            /** @type {?} */\n            var handle = this.createHandleByType(type, \"ng-resizable-\".concat(type));\n\n            if (handle) {\n              this._handleType.push(type);\n\n              this._handles[type] = handle;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        tmpHandleTypes = Object.keys(this.rzHandles);\n\n        var _iterator2 = _createForOfIteratorHelper(tmpHandleTypes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _type = _step2.value;\n\n            // custom handle theme.\n\n            /** @type {?} */\n            var _handle = this.createHandleByType(_type, this.rzHandles[_type]);\n\n            if (_handle) {\n              this._handleType.push(_type);\n\n              this._handles[_type] = _handle;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n    /**\r\n     * Use it to create a handle\r\n     * @private\r\n     * @param {?} type\r\n     * @param {?} css\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createHandleByType\",\n    value: function createHandleByType(type, css) {\n      /** @type {?} */\n      var _el = this.el.nativeElement;\n\n      if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\n        console.error('Invalid handle type:', type);\n        return null;\n      }\n\n      return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"removeHandles\",\n    value: function removeHandles() {\n      var _iterator3 = _createForOfIteratorHelper(this._handleType),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var type = _step3.value;\n\n          this._handles[type].dispose();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleType = [];\n      this._handles = {};\n    }\n    /**\r\n     * @param {?} event\r\n     * @param {?} handle\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event, handle) {\n      // skip right click;\n      if (event instanceof MouseEvent && event.button === 2) {\n        return;\n      }\n\n      if (this.preventDefaultEvent) {\n        // prevent default events\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      if (!this._handleResizing) {\n        this._origMousePos = Position.fromEvent(event);\n        this.startResize(handle);\n        this.subscribeEvents();\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this3 = this;\n\n      this.draggingSub = fromEvent(document, 'mousemove', {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @param {?} event\r\n      * @return {?}\r\n      */\n      function (event) {\n        return _this3.onMouseMove(\n        /** @type {?} */\n        event);\n      });\n      this.draggingSub.add(fromEvent(document, 'touchmove', {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @param {?} event\r\n      * @return {?}\r\n      */\n      function (event) {\n        return _this3.onMouseMove(\n        /** @type {?} */\n        event);\n      }));\n      this.draggingSub.add(fromEvent(document, 'mouseup', {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this3.onMouseLeave();\n      })); // fix for issue #164\n\n      /** @type {?} */\n\n      var isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n\n      if (!isIEOrEdge) {\n        this.draggingSub.add(fromEvent(document, 'mouseleave', {\n          passive: false\n        }).subscribe(\n        /**\r\n        * @return {?}\r\n        */\n        function () {\n          return _this3.onMouseLeave();\n        }));\n      }\n\n      this.draggingSub.add(fromEvent(document, 'touchend', {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this3.onMouseLeave();\n      }));\n      this.draggingSub.add(fromEvent(document, 'touchcancel', {\n        passive: false\n      }).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this3.onMouseLeave();\n      }));\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"unsubscribeEvents\",\n    value: function unsubscribeEvents() {\n      this.draggingSub.unsubscribe();\n      this.draggingSub = null;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      if (this._handleResizing) {\n        this.stopResize();\n        this._origMousePos = null;\n        this.unsubscribeEvents();\n      }\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\n        this.resizeTo(Position.fromEvent(event));\n        this.onResizing();\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {?} handle\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"startResize\",\n    value: function startResize(handle) {\n      /** @type {?} */\n      var elm = this.el.nativeElement;\n      this._origSize = Size.getCurrent(elm);\n      this._origPos = Position.getCurrent(elm); // x: left, y: top\n\n      this._currSize = Size.copy(this._origSize);\n      this._currPos = Position.copy(this._origPos);\n\n      if (this._containment) {\n        this.getBounding();\n      }\n\n      this.getGridSize(); // Add a transparent helper div:\n\n      this._helperBlock.add();\n\n      this._handleResizing = handle;\n      this.updateDirection();\n      this.rzStart.emit(this.getResizingEvent());\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"stopResize\",\n    value: function stopResize() {\n      // Remove the helper div:\n      this._helperBlock.remove();\n\n      this.rzStop.emit(this.getResizingEvent());\n      this._handleResizing = null;\n      this._direction = null;\n      this._origSize = null;\n      this._origPos = null;\n\n      if (this._containment) {\n        this.resetBounding();\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onResizing\",\n    value: function onResizing() {\n      this.rzResizing.emit(this.getResizingEvent());\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getResizingEvent\",\n    value: function getResizingEvent() {\n      return {\n        host: this.el.nativeElement,\n        handle: this._handleResizing ? this._handleResizing.el : null,\n        size: {\n          width: this._currSize.width,\n          height: this._currSize.height\n        },\n        position: {\n          top: this._currPos.y,\n          left: this._currPos.x\n        },\n        direction: Object.assign({}, this._directionChanged)\n      };\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"updateDirection\",\n    value: function updateDirection() {\n      this._direction = {\n        n: !!this._handleResizing.type.match(/n/),\n        s: !!this._handleResizing.type.match(/s/),\n        w: !!this._handleResizing.type.match(/w/),\n        e: !!this._handleResizing.type.match(/e/)\n      };\n      this._directionChanged = Object.assign({}, this._direction); // if aspect ration should be preserved:\n\n      if (this.rzAspectRatio) {\n        // if north then west (unless ne)\n        if (this._directionChanged.n && !this._directionChanged.e) {\n          this._directionChanged.w = true;\n        } // if south then east (unless sw)\n\n\n        if (this._directionChanged.s && !this._directionChanged.w) {\n          this._directionChanged.e = true;\n        } // if east then south (unless ne)\n\n\n        if (this._directionChanged.e && !this._directionChanged.n) {\n          this._directionChanged.s = true;\n        } // if west then south (unless nw)\n\n\n        if (this._directionChanged.w && !this._directionChanged.n) {\n          this._directionChanged.s = true;\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resizeTo\",\n    value: function resizeTo(p) {\n      p.subtract(this._origMousePos);\n      /** @type {?} */\n\n      var tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\n      /** @type {?} */\n\n\n      var tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\n\n      if (this._direction.n) {\n        // n, ne, nw\n        this._currPos.y = this._origPos.y + tmpY;\n        this._currSize.height = this._origSize.height - tmpY;\n      } else if (this._direction.s) {\n        // s, se, sw\n        this._currSize.height = this._origSize.height + tmpY;\n      }\n\n      if (this._direction.e) {\n        // e, ne, se\n        this._currSize.width = this._origSize.width + tmpX;\n      } else if (this._direction.w) {\n        // w, nw, sw\n        this._currSize.width = this._origSize.width - tmpX;\n        this._currPos.x = this._origPos.x + tmpX;\n      }\n\n      this.checkBounds();\n      this.checkSize();\n      this.adjustByRatio();\n      this.doResize();\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"doResize\",\n    value: function doResize() {\n      /** @type {?} */\n      var container = this.el.nativeElement;\n\n      if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\n        this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\n      }\n\n      if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\n        this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\n      }\n\n      this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\n      this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"adjustByRatio\",\n    value: function adjustByRatio() {\n      if (this._aspectRatio && !this._adjusted) {\n        if (this._direction.e || this._direction.w) {\n          /** @type {?} */\n          var newHeight = Math.floor(this._currSize.width / this._aspectRatio);\n\n          if (this._direction.n) {\n            this._currPos.y += this._currSize.height - newHeight;\n          }\n\n          this._currSize.height = newHeight;\n        } else {\n          /** @type {?} */\n          var newWidth = Math.floor(this._aspectRatio * this._currSize.height);\n\n          if (this._direction.n) {\n            this._currPos.x += this._currSize.width - newWidth;\n          }\n\n          this._currSize.width = newWidth;\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"checkBounds\",\n    value: function checkBounds() {\n      if (this._containment) {\n        /** @type {?} */\n        var maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\n        /** @type {?} */\n\n        var maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\n\n        if (this._direction.n && this._currPos.y + this._bounding.translateY < 0) {\n          this._currPos.y = -this._bounding.translateY;\n          this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\n        }\n\n        if (this._direction.w && this._currPos.x + this._bounding.translateX < 0) {\n          this._currPos.x = -this._bounding.translateX;\n          this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\n        }\n\n        if (this._currSize.width > maxWidth) {\n          this._currSize.width = maxWidth;\n        }\n\n        if (this._currSize.height > maxHeight) {\n          this._currSize.height = maxHeight;\n        }\n        /**\r\n         * Fix Issue: Additional check for aspect ratio\r\n         * https://github.com/xieziyu/ngx-draggable-resize/issues/132\r\n         */\n\n\n        if (this._aspectRatio) {\n          this._adjusted = false;\n\n          if ((this._direction.w || this._direction.e) && this._currSize.width / this._aspectRatio >= maxHeight) {\n            /** @type {?} */\n            var newWidth = Math.floor(maxHeight * this._aspectRatio);\n\n            if (this._direction.w) {\n              this._currPos.x += this._currSize.width - newWidth;\n            }\n\n            this._currSize.width = newWidth;\n            this._currSize.height = maxHeight;\n            this._adjusted = true;\n          }\n\n          if ((this._direction.n || this._direction.s) && this._currSize.height * this._aspectRatio >= maxWidth) {\n            /** @type {?} */\n            var newHeight = Math.floor(maxWidth / this._aspectRatio);\n\n            if (this._direction.n) {\n              this._currPos.y += this._currSize.height - newHeight;\n            }\n\n            this._currSize.width = maxWidth;\n            this._currSize.height = newHeight;\n            this._adjusted = true;\n          }\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"checkSize\",\n    value: function checkSize() {\n      /** @type {?} */\n      var minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\n      /** @type {?} */\n\n      var minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\n\n      if (this._currSize.height < minHeight) {\n        this._currSize.height = minHeight;\n\n        if (this._direction.n) {\n          this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\n        }\n      }\n\n      if (this._currSize.width < minWidth) {\n        this._currSize.width = minWidth;\n\n        if (this._direction.w) {\n          this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\n        }\n      }\n\n      if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\n        this._currSize.height = this.rzMaxHeight;\n\n        if (this._direction.n) {\n          this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\n        }\n      }\n\n      if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\n        this._currSize.width = this.rzMaxWidth;\n\n        if (this._direction.w) {\n          this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getBounding\",\n    value: function getBounding() {\n      /** @type {?} */\n      var el = this._containment;\n      /** @type {?} */\n\n      var computed = window.getComputedStyle(el);\n\n      if (computed) {\n        /** @type {?} */\n        var p = computed.getPropertyValue('position');\n        /** @type {?} */\n\n        var nativeEl = window.getComputedStyle(this.el.nativeElement);\n        /** @type {?} */\n\n        var transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\n        this._bounding = {};\n        this._bounding.width = el.clientWidth;\n        this._bounding.height = el.clientHeight;\n        this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\n        this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\n        this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\n        this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\n\n        if (transforms.length >= 6) {\n          this._bounding.translateX = parseInt(transforms[4], 10);\n          this._bounding.translateY = parseInt(transforms[5], 10);\n        } else {\n          this._bounding.translateX = 0;\n          this._bounding.translateY = 0;\n        }\n\n        this._bounding.position = computed.getPropertyValue('position');\n\n        if (p === 'static') {\n          this.renderer.setStyle(el, 'position', 'relative');\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resetBounding\",\n    value: function resetBounding() {\n      if (this._bounding && this._bounding.position === 'static') {\n        this.renderer.setStyle(this._containment, 'position', 'relative');\n      }\n\n      this._bounding = null;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getGridSize\",\n    value: function getGridSize() {\n      // set default value:\n      this._gridSize = {\n        x: 1,\n        y: 1\n      };\n\n      if (this.rzGrid) {\n        if (typeof this.rzGrid === 'number') {\n          this._gridSize = {\n            x: this.rzGrid,\n            y: this.rzGrid\n          };\n        } else if (Array.isArray(this.rzGrid)) {\n          this._gridSize = {\n            x: this.rzGrid[0],\n            y: this.rzGrid[1]\n          };\n        }\n      }\n    }\n  }, {\n    key: \"ngResizable\",\n    set: function set(v) {\n      if (v !== undefined && v !== null && v !== '') {\n        this._resizable = !!v;\n        this.updateResizable();\n      }\n    }\n  }]);\n\n  return AngularResizableDirective;\n}();\n\nAngularResizableDirective.Éµfac = function AngularResizableDirective_Factory(t) {\n  return new (t || AngularResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2));\n};\n\nAngularResizableDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: AngularResizableDirective,\n  selectors: [[\"\", \"ngResizable\", \"\"]],\n  inputs: {\n    rzHandles: \"rzHandles\",\n    rzAspectRatio: \"rzAspectRatio\",\n    rzContainment: \"rzContainment\",\n    rzGrid: \"rzGrid\",\n    rzMinWidth: \"rzMinWidth\",\n    rzMinHeight: \"rzMinHeight\",\n    rzMaxWidth: \"rzMaxWidth\",\n    rzMaxHeight: \"rzMaxHeight\",\n    preventDefaultEvent: \"preventDefaultEvent\",\n    ngResizable: \"ngResizable\"\n  },\n  outputs: {\n    rzStart: \"rzStart\",\n    rzResizing: \"rzResizing\",\n    rzStop: \"rzStop\"\n  },\n  exportAs: [\"ngResizable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\n\nAngularResizableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nAngularResizableDirective.propDecorators = {\n  ngResizable: [{\n    type: Input\n  }],\n  rzHandles: [{\n    type: Input\n  }],\n  rzAspectRatio: [{\n    type: Input\n  }],\n  rzContainment: [{\n    type: Input\n  }],\n  rzGrid: [{\n    type: Input\n  }],\n  rzMinWidth: [{\n    type: Input\n  }],\n  rzMinHeight: [{\n    type: Input\n  }],\n  rzMaxWidth: [{\n    type: Input\n  }],\n  rzMaxHeight: [{\n    type: Input\n  }],\n  preventDefaultEvent: [{\n    type: Input\n  }],\n  rzStart: [{\n    type: Output\n  }],\n  rzResizing: [{\n    type: Output\n  }],\n  rzStop: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngResizable]',\n      exportAs: 'ngResizable'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.Renderer2\n    }];\n  }, {\n    rzHandles: [{\n      type: Input\n    }],\n    rzAspectRatio: [{\n      type: Input\n    }],\n    rzContainment: [{\n      type: Input\n    }],\n    rzGrid: [{\n      type: Input\n    }],\n    rzMinWidth: [{\n      type: Input\n    }],\n    rzMinHeight: [{\n      type: Input\n    }],\n    rzMaxWidth: [{\n      type: Input\n    }],\n    rzMaxHeight: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    rzStart: [{\n      type: Output\n    }],\n    rzResizing: [{\n      type: Output\n    }],\n    rzStop: [{\n      type: Output\n    }],\n    ngResizable: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar AngularDraggableModule = function AngularDraggableModule() {\n  _classCallCheck(this, AngularDraggableModule);\n};\n\nAngularDraggableModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({\n  type: AngularDraggableModule\n});\nAngularDraggableModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({\n  factory: function AngularDraggableModule_Factory(t) {\n    return new (t || AngularDraggableModule)();\n  },\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(AngularDraggableModule, {\n    declarations: [AngularDraggableDirective, AngularResizableDirective],\n    exports: [AngularDraggableDirective, AngularResizableDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [AngularDraggableDirective, AngularResizableDirective],\n      exports: [AngularDraggableDirective, AngularResizableDirective]\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { AngularDraggableDirective, AngularResizableDirective, AngularDraggableModule, Position };","map":{"version":3,"sources":["ngx-draggable-resize/lib/models/position.ts","ngx-draggable-resize/lib/widgets/helper-block.ts","ngx-draggable-resize/lib/angular-draggable.directive.ts","ngx-draggable-resize/lib/widgets/resize-handle.ts","ngx-draggable-resize/lib/models/size.ts","ngx-draggable-resize/lib/angular-resizable.directive.ts","ngx-draggable-resize/lib/angular-draggable.module.ts"],"names":[],"mappings":"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","sourcesContent":["export interface IPosition {\r\n  x: number;\r\n  y: number;\r\n  rotate?: number;\r\n  scaleX?: number;\r\n  scaleY?: number;\r\n}\r\n\r\nexport class Position implements IPosition {\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public rotate = 0,\r\n    public scaleX = 1,\r\n    public scaleY = 1\r\n  ) {}\r\n\r\n  static fromEvent(e: MouseEvent | TouchEvent, el: any = null) {\r\n    /**\r\n     * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n     * https://github.com/xieziyu/ngx-draggable-resize/issues/164\r\n     * e instanceof MouseEvent check returns false on IE11\r\n     */\r\n    if (this.isMouseEvent(e)) {\r\n      return new Position(e.clientX, e.clientY);\r\n    } else {\r\n      if (el === null || e.changedTouches.length === 1) {\r\n        return new Position(\r\n          e.changedTouches[0].clientX,\r\n          e.changedTouches[0].clientY\r\n        );\r\n      }\r\n\r\n      /**\r\n       * Fix issue: Multiple phone draggables at the same time\r\n       * https://github.com/xieziyu/ngx-draggable-resize/issues/128\r\n       */\r\n      for (let i = 0; i < e.changedTouches.length; i++) {\r\n        if (e.changedTouches[i].target === el) {\r\n          return new Position(\r\n            e.changedTouches[i].clientX,\r\n            e.changedTouches[i].clientY\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static isMouseEvent(e: MouseEvent | TouchEvent): e is MouseEvent {\r\n    return Object.prototype.toString.apply(e).indexOf(\"MouseEvent\") === 8;\r\n  }\r\n\r\n  static isIPosition(obj): obj is IPosition {\r\n    return !!obj && \"x\" in obj && \"y\" in obj;\r\n  }\r\n\r\n  static getCurrent(el: Element) {\r\n    let pos = new Position(0, 0,0,0,0);\r\n\r\n    if (window) {\r\n      const computed = window.getComputedStyle(el);\r\n      if (computed) {\r\n        let x = parseInt(computed.getPropertyValue(\"left\"), 10);\r\n        let y = parseInt(computed.getPropertyValue(\"top\"), 10);\r\n        pos.x = isNaN(x) ? 0 : x;\r\n        pos.y = isNaN(y) ? 0 : y;\r\n      }\r\n      return pos;\r\n    } else {\r\n      console.error(\"Not Supported!\");\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static copy(p: IPosition) {\r\n    return new Position(0, 0, 0, 1, 1).set(p);\r\n  }\r\n\r\n  get value(): IPosition {\r\n    return {\r\n      x: this.x,\r\n      y: this.y,\r\n      rotate: this.rotate,\r\n      scaleX: this.scaleX,\r\n      scaleY: this.scaleY\r\n    };\r\n  }\r\n\r\n  add(p: IPosition) {\r\n    this.x += p.x;\r\n    this.y += p.y;\r\n    return this;\r\n  }\r\n\r\n  subtract(p: IPosition) {\r\n    this.x -= p.x;\r\n    this.y -= p.y;\r\n    return this;\r\n  }\r\n\r\n  multiply(n: number) {\r\n    this.x *= n;\r\n    this.y *= n;\r\n  }\r\n\r\n  divide(n: number) {\r\n    this.x /= n;\r\n    this.y /= n;\r\n  }\r\n\r\n  reset() {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.rotate = 0;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    return this;\r\n  }\r\n\r\n  set(p: IPosition) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    this.rotate = p.rotate;\r\n    this.scaleY = p.scaleY;\r\n    this.scaleX = p.scaleX;\r\n    return this;\r\n  }\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport class HelperBlock {\r\n  protected _helper: Element;\r\n  private _added = false;\r\n\r\n  constructor(\r\n    protected parent: Element,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    // generate helper div\r\n    let helper = renderer.createElement('div');\r\n    renderer.setStyle(helper, 'position', 'absolute');\r\n    renderer.setStyle(helper, 'width', '100%');\r\n    renderer.setStyle(helper, 'height', '100%');\r\n    renderer.setStyle(helper, 'background-color', 'transparent');\r\n    renderer.setStyle(helper, 'top', '0');\r\n    renderer.setStyle(helper, 'left', '0');\r\n\r\n    // done\r\n    this._helper = helper;\r\n  }\r\n\r\n  add() {\r\n    // append div to parent\r\n    if (this.parent && !this._added) {\r\n      this.parent.appendChild(this._helper);\r\n      this._added = true;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    if (this.parent && this._added) {\r\n      this.parent.removeChild(this._helper);\r\n      this._added = false;\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this._helper = null;\r\n    this._added = false;\r\n  }\r\n\r\n  get el() {\r\n    return this._helper;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Renderer2,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  HostListener,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  AfterViewInit\r\n} from \"@angular/core\";\r\n\r\nimport { Subscription, fromEvent } from \"rxjs\";\r\nimport { IPosition, Position } from \"./models/position\";\r\nimport { HelperBlock } from \"./widgets/helper-block\";\r\n\r\n@Directive({\r\n  selector: \"[ngDraggable]\",\r\n  exportAs: \"ngDraggable\"\r\n})\r\nexport class AngularDraggableDirective\r\n  implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n  private allowDrag = true;\r\n  private moving = false;\r\n  private orignal: Position = null;\r\n  private oldTrans = new Position(0, 0, 0, 1, 1);\r\n  private tempTrans = new Position(0, 0, 0, 1, 1);\r\n  private currTrans = new Position(0, 0, 0, 1, 1);\r\n  private oldZIndex = \"\";\r\n  private _zIndex = \"\";\r\n  private needTransform = false;\r\n\r\n  private draggingSub: Subscription = null;\r\n\r\n  /**\r\n   * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n   * https://github.com/xieziyu/ngx-draggable-resize/issues/84\r\n   */\r\n  private _helperBlock: HelperBlock = null;\r\n\r\n  @Output() started = new EventEmitter<any>();\r\n  @Output() stopped = new EventEmitter<any>();\r\n  @Output() edge = new EventEmitter<any>();\r\n\r\n  /** Make the handle HTMLElement draggable */\r\n  @Input() handle: HTMLElement;\r\n\r\n  /** Set the bounds HTMLElement */\r\n  @Input() bounds: HTMLElement;\r\n\r\n  /** List of allowed out of bounds edges **/\r\n  @Input() outOfBounds = {\r\n    top: false,\r\n    right: false,\r\n    bottom: false,\r\n    left: false\r\n  };\r\n\r\n  /** Round the position to nearest grid */\r\n  @Input() gridSize = 1;\r\n\r\n  /** Set z-index when dragging */\r\n  @Input() zIndexMoving: string;\r\n\r\n  /** Set z-index when not dragging */\r\n  @Input() set zIndex(setting: string) {\r\n    this.renderer.setStyle(this.el.nativeElement, \"z-index\", setting);\r\n    this._zIndex = setting;\r\n  }\r\n  /** Whether to limit the element stay in the bounds */\r\n  @Input() inBounds = false;\r\n\r\n  /** Whether the element should use it's previous drag position on a new drag event. */\r\n  @Input() trackPosition = true;\r\n\r\n  /** Input css scale transform of element so translations are correct */\r\n  @Input() scale = 1;\r\n\r\n  /** Whether to prevent default event */\r\n  @Input() preventDefaultEvent = false;\r\n\r\n  /** Set initial position by offsets */\r\n  @Input() position: IPosition = {\r\n    x: 0,\r\n    y: 0,\r\n    rotate: 0,\r\n    scaleX: 1,\r\n    scaleY: 1\r\n  };\r\n\r\n  /** Lock axis: 'x' or 'y' */\r\n  @Input() lockAxis: string = null;\r\n\r\n  /** Emit position offsets when moving */\r\n  @Output() movingOffset = new EventEmitter<IPosition>();\r\n\r\n  /** Emit position offsets when put back */\r\n  @Output() endOffset = new EventEmitter<IPosition>();\r\n\r\n  @Input()\r\n  set ngDraggable(setting: any) {\r\n    if (setting !== undefined && setting !== null && setting !== \"\") {\r\n      this.allowDrag = !!setting;\r\n\r\n      let element = this.getDragEl();\r\n\r\n      if (this.allowDrag) {\r\n        this.renderer.addClass(element, \"ng-draggable\");\r\n      } else {\r\n        this.putBack();\r\n        this.renderer.removeClass(element, \"ng-draggable\");\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.allowDrag) {\r\n      let element = this.getDragEl();\r\n      this.renderer.addClass(element, \"ng-draggable\");\r\n    }\r\n    this.resetPosition();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.bounds = null;\r\n    this.handle = null;\r\n    this.orignal = null;\r\n    this.oldTrans = null;\r\n    this.tempTrans = null;\r\n    this.currTrans = null;\r\n    this._helperBlock.dispose();\r\n    this._helperBlock = null;\r\n\r\n    if (this.draggingSub) {\r\n      this.draggingSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes[\"position\"] && !changes[\"position\"].isFirstChange()) {\r\n      let p = changes[\"position\"].currentValue;\r\n\r\n      if (!this.moving) {\r\n        if (Position.isIPosition(p)) {\r\n          this.oldTrans.set(p);\r\n        } else {\r\n          this.oldTrans.reset();\r\n        }\r\n\r\n        this.transform();\r\n      } else {\r\n        this.needTransform = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.inBounds) {\r\n      this.boundsCheck();\r\n      this.oldTrans.add(this.tempTrans);\r\n      this.tempTrans.reset();\r\n    }\r\n  }\r\n\r\n  private getDragEl() {\r\n    return this.handle ? this.handle : this.el.nativeElement;\r\n  }\r\n\r\n  resetPosition() {\r\n    if (Position.isIPosition(this.position)) {\r\n      this.oldTrans.set(this.position);\r\n    } else {\r\n      this.oldTrans.reset();\r\n    }\r\n    this.tempTrans.reset();\r\n    this.transform();\r\n  }\r\n\r\n  private moveTo(p: Position) {\r\n    if (this.orignal) {\r\n      p.subtract(this.orignal);\r\n      this.tempTrans.set(p);\r\n      this.tempTrans.divide(this.scale);\r\n      this.transform();\r\n\r\n      if (this.bounds) {\r\n        this.edge.emit(this.boundsCheck());\r\n      }\r\n\r\n      this.movingOffset.emit(this.currTrans.value);\r\n    }\r\n  }\r\n\r\n  private transform() {\r\n    let translateX = this.tempTrans.x + this.oldTrans.x;\r\n    let translateY = this.tempTrans.y + this.oldTrans.y;\r\n\r\n    if (this.lockAxis === \"x\") {\r\n      translateX = this.oldTrans.x;\r\n      this.tempTrans.x = 0;\r\n    } else if (this.lockAxis === \"y\") {\r\n      translateY = this.oldTrans.y;\r\n      this.tempTrans.y = 0;\r\n    }\r\n\r\n    // Snap to grid: by grid size\r\n    if (this.gridSize > 1) {\r\n      translateX = Math.round(translateX / this.gridSize) * this.gridSize;\r\n      translateY = Math.round(translateY / this.gridSize) * this.gridSize;\r\n    }\r\n\r\n    let value = `translate(${Math.round(translateX)}px, ${Math.round(\r\n      translateY\r\n    )}px)  rotate(${this.position.rotate}deg) scaleX(${this.position.scaleX}) scaleY(${this.position.scaleY})`;\r\n\r\n    this.renderer.setStyle(this.el.nativeElement, \"transform\", value);\r\n    this.renderer.setStyle(this.el.nativeElement, \"-webkit-transform\", value);\r\n    this.renderer.setStyle(this.el.nativeElement, \"-ms-transform\", value);\r\n    this.renderer.setStyle(this.el.nativeElement, \"-moz-transform\", value);\r\n    this.renderer.setStyle(this.el.nativeElement, \"-o-transform\", value);\r\n\r\n    // save current position\r\n    this.currTrans.x = translateX;\r\n    this.currTrans.y = translateY;\r\n  }\r\n\r\n  private pickUp() {\r\n    // get old z-index:\r\n    this.oldZIndex = this.el.nativeElement.style.zIndex\r\n      ? this.el.nativeElement.style.zIndex\r\n      : \"\";\r\n\r\n    if (window) {\r\n      this.oldZIndex = window\r\n        .getComputedStyle(this.el.nativeElement, null)\r\n        .getPropertyValue(\"z-index\");\r\n    }\r\n\r\n    if (this.zIndexMoving) {\r\n      this.renderer.setStyle(\r\n        this.el.nativeElement,\r\n        \"z-index\",\r\n        this.zIndexMoving\r\n      );\r\n    }\r\n\r\n    if (!this.moving) {\r\n      this.started.emit(this.el.nativeElement);\r\n      this.moving = true;\r\n\r\n      const element = this.getDragEl();\r\n      this.renderer.addClass(element, \"ng-dragging\");\r\n\r\n      /**\r\n       * Fix performance issue:\r\n       * https://github.com/xieziyu/ngx-draggable-resize/issues/112\r\n       */\r\n      this.subscribeEvents();\r\n    }\r\n  }\r\n\r\n  private subscribeEvents() {\r\n    this.draggingSub = fromEvent(document, \"mousemove\", {\r\n      passive: false\r\n    }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n    this.draggingSub.add(\r\n      fromEvent(document, \"touchmove\", { passive: false }).subscribe(event =>\r\n        this.onMouseMove(event as TouchEvent)\r\n      )\r\n    );\r\n    this.draggingSub.add(\r\n      fromEvent(document, \"mouseup\", { passive: false }).subscribe(() =>\r\n        this.putBack()\r\n      )\r\n    );\r\n    // checking if browser is IE or Edge - https://github.com/xieziyu/ngx-draggable-resize/issues/153\r\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n    if (!isIEOrEdge) {\r\n      this.draggingSub.add(\r\n        fromEvent(document, \"mouseleave\", { passive: false }).subscribe(() =>\r\n          this.putBack()\r\n        )\r\n      );\r\n    }\r\n    this.draggingSub.add(\r\n      fromEvent(document, \"touchend\", { passive: false }).subscribe(() =>\r\n        this.putBack()\r\n      )\r\n    );\r\n    this.draggingSub.add(\r\n      fromEvent(document, \"touchcancel\", { passive: false }).subscribe(() =>\r\n        this.putBack()\r\n      )\r\n    );\r\n  }\r\n\r\n  private unsubscribeEvents() {\r\n    this.draggingSub.unsubscribe();\r\n    this.draggingSub = null;\r\n  }\r\n\r\n  boundsCheck() {\r\n    if (this.bounds) {\r\n      let boundary = this.bounds.getBoundingClientRect();\r\n      let elem = this.el.nativeElement.getBoundingClientRect();\r\n      let result = {\r\n        top: this.outOfBounds.top ? true : boundary.top < elem.top,\r\n        right: this.outOfBounds.right ? true : boundary.right > elem.right,\r\n        bottom: this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\r\n        left: this.outOfBounds.left ? true : boundary.left < elem.left\r\n      };\r\n\r\n      if (this.inBounds) {\r\n        if (!result.top) {\r\n          this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\r\n        }\r\n\r\n        if (!result.bottom) {\r\n          this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\r\n        }\r\n\r\n        if (!result.right) {\r\n          this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\r\n        }\r\n\r\n        if (!result.left) {\r\n          this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\r\n        }\r\n\r\n        this.transform();\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /** Get current offset */\r\n  getCurrentOffset() {\r\n    return this.currTrans.value;\r\n  }\r\n\r\n  private putBack() {\r\n    if (this._zIndex) {\r\n      this.renderer.setStyle(this.el.nativeElement, \"z-index\", this._zIndex);\r\n    } else if (this.zIndexMoving) {\r\n      if (this.oldZIndex) {\r\n        this.renderer.setStyle(\r\n          this.el.nativeElement,\r\n          \"z-index\",\r\n          this.oldZIndex\r\n        );\r\n      } else {\r\n        this.el.nativeElement.style.removeProperty(\"z-index\");\r\n      }\r\n    }\r\n\r\n    if (this.moving) {\r\n      this.stopped.emit(this.el.nativeElement);\r\n\r\n      // Remove the helper div:\r\n      this._helperBlock.remove();\r\n\r\n      if (this.needTransform) {\r\n        if (Position.isIPosition(this.position)) {\r\n          this.oldTrans.set(this.position);\r\n        } else {\r\n          this.oldTrans.reset();\r\n        }\r\n\r\n        this.transform();\r\n        this.needTransform = false;\r\n      }\r\n\r\n      if (this.bounds) {\r\n        this.edge.emit(this.boundsCheck());\r\n      }\r\n\r\n      this.moving = false;\r\n      this.endOffset.emit(this.currTrans.value);\r\n\r\n      if (this.trackPosition) {\r\n        this.oldTrans.add(this.tempTrans);\r\n      }\r\n\r\n      this.tempTrans.reset();\r\n\r\n      if (!this.trackPosition) {\r\n        this.transform();\r\n      }\r\n\r\n      const element = this.getDragEl();\r\n      this.renderer.removeClass(element, \"ng-dragging\");\r\n\r\n      /**\r\n       * Fix performance issue:\r\n       * https://github.com/xieziyu/ngx-draggable-resize/issues/112\r\n       */\r\n      this.unsubscribeEvents();\r\n    }\r\n  }\r\n\r\n  checkHandleTarget(target: EventTarget, element: Element) {\r\n    // Checks if the target is the element clicked, then checks each child element of element as well\r\n    // Ignores button clicks\r\n\r\n    // Ignore elements of type button\r\n    if (element.tagName === \"BUTTON\") {\r\n      return false;\r\n    }\r\n\r\n    // If the target was found, return true (handle was found)\r\n    if (element === target) {\r\n      return true;\r\n    }\r\n\r\n    // Recursively iterate this elements children\r\n    for (let child in element.children) {\r\n      if (element.children.hasOwnProperty(child)) {\r\n        if (this.checkHandleTarget(target, element.children[child])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle was not found in this lineage\r\n    // Note: return false is ignore unless it is the parent element\r\n    return false;\r\n  }\r\n\r\n  @HostListener(\"mousedown\", [\"$event\"])\r\n  @HostListener(\"touchstart\", [\"$event\"])\r\n  onMouseDown(event: MouseEvent | TouchEvent) {\r\n    // 1. skip right click;\r\n    if (event instanceof MouseEvent && event.button === 2) {\r\n      return;\r\n    }\r\n    // 2. if handle is set, the element can only be moved by handle\r\n    let target = event.target || event.srcElement;\r\n    if (\r\n      this.handle !== undefined &&\r\n      !this.checkHandleTarget(target, this.handle)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // 3. if allow drag is set to false, ignore the mousedown\r\n    if (this.allowDrag === false) {\r\n      return;\r\n    }\r\n\r\n    if (this.preventDefaultEvent) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n\r\n    this.orignal = Position.fromEvent(event, this.getDragEl());\r\n    this.pickUp();\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent | TouchEvent) {\r\n    if (this.moving && this.allowDrag) {\r\n      if (this.preventDefaultEvent) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n      }\r\n\r\n      // Add a transparent helper div:\r\n      this._helperBlock.add();\r\n      this.moveTo(Position.fromEvent(event, this.getDragEl()));\r\n    }\r\n  }\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport class ResizeHandle {\r\n  protected _handle: Element;\r\n  private _onResize;\r\n\r\n  constructor(\r\n    protected parent: Element,\r\n    protected renderer: Renderer2,\r\n    public type: string,\r\n    public css: string,\r\n    private onMouseDown: any\r\n  ) {\r\n    // generate handle div\r\n    let handle = renderer.createElement('div');\r\n    renderer.addClass(handle, 'ng-resizable-handle');\r\n    renderer.addClass(handle, css);\r\n\r\n    // add default diagonal for se handle\r\n    if (type === 'se') {\r\n      renderer.addClass(handle, 'ng-resizable-diagonal');\r\n    }\r\n\r\n    // append div to parent\r\n    if (this.parent) {\r\n      parent.appendChild(handle);\r\n    }\r\n\r\n    // create and register event listener\r\n    this._onResize = (event) => { onMouseDown(event, this); };\r\n    handle.addEventListener('mousedown', this._onResize, { passive: false });\r\n    handle.addEventListener('touchstart', this._onResize, { passive: false });\r\n\r\n    // done\r\n    this._handle = handle;\r\n  }\r\n\r\n  dispose() {\r\n    this._handle.removeEventListener('mousedown', this._onResize);\r\n    this._handle.removeEventListener('touchstart', this._onResize);\r\n\r\n    if (this.parent) {\r\n      this.parent.removeChild(this._handle);\r\n    }\r\n    this._handle = null;\r\n    this._onResize = null;\r\n  }\r\n\r\n  get el() {\r\n    return this._handle;\r\n  }\r\n}\r\n","export interface ISize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport class Size implements ISize {\r\n  constructor(public width: number, public height: number) { }\r\n\r\n  static getCurrent(el: Element) {\r\n    let size = new Size(0, 0);\r\n\r\n    if (window) {\r\n      const computed = window.getComputedStyle(el);\r\n      if (computed) {\r\n        size.width = parseInt(computed.getPropertyValue('width'), 10);\r\n        size.height = parseInt(computed.getPropertyValue('height'), 10);\r\n      }\r\n      return size;\r\n    } else {\r\n      console.error('Not Supported!');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static copy(s: Size) {\r\n    return new Size(0, 0).set(s);\r\n  }\r\n\r\n  set(s: ISize) {\r\n    this.width = s.width;\r\n    this.height = s.height;\r\n    return this;\r\n  }\r\n}\r\n","import {\r\n  Directive, ElementRef, Renderer2,\r\n  Input, Output, OnInit, EventEmitter, OnChanges, SimpleChanges,\r\n  OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { HelperBlock } from './widgets/helper-block';\r\nimport { ResizeHandle } from './widgets/resize-handle';\r\nimport { ResizeHandleType } from './models/resize-handle-type';\r\nimport { Position, IPosition } from './models/position';\r\nimport { Size } from './models/size';\r\nimport { IResizeEvent } from './models/resize-event';\r\n\r\n@Directive({\r\n  selector: '[ngResizable]',\r\n  exportAs: 'ngResizable'\r\n})\r\nexport class AngularResizableDirective implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n  private _resizable = true;\r\n  private _handles: { [key: string]: ResizeHandle } = {};\r\n  private _handleType: string[] = [];\r\n  private _handleResizing: ResizeHandle = null;\r\n  private _direction: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n  private _directionChanged: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n  private _aspectRatio = 0;\r\n  private _containment: HTMLElement = null;\r\n  private _origMousePos: Position = null;\r\n\r\n  /** Original Size and Position */\r\n  private _origSize: Size = null;\r\n  private _origPos: Position = null;\r\n\r\n  /** Current Size and Position */\r\n  private _currSize: Size = null;\r\n  private _currPos: Position = null;\r\n\r\n  /** Initial Size and Position */\r\n  private _initSize: Size = null;\r\n  private _initPos: Position = null;\r\n\r\n  /** Snap to gird */\r\n  private _gridSize: IPosition = null;\r\n\r\n  private _bounding: any = null;\r\n\r\n  /**\r\n   * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n   * https://github.com/xieziyu/ngx-draggable-resize/issues/84\r\n   */\r\n  private _helperBlock: HelperBlock = null;\r\n\r\n  private draggingSub: Subscription = null;\r\n  private _adjusted = false;\r\n\r\n  /** Disables the resizable if set to false. */\r\n  @Input() set ngResizable(v: any) {\r\n    if (v !== undefined && v !== null && v !== '') {\r\n      this._resizable = !!v;\r\n      this.updateResizable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Which handles can be used for resizing.\r\n   * @example\r\n   * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n   * equals to: [rzHandles] = \"'all'\"\r\n   *\r\n   * */\r\n  @Input() rzHandles: ResizeHandleType = 'e,s,se';\r\n\r\n  /**\r\n   * Whether the element should be constrained to a specific aspect ratio.\r\n   *  Multiple types supported:\r\n   *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n   *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n   */\r\n  @Input() rzAspectRatio: boolean | number = false;\r\n\r\n  /**\r\n   * Constrains resizing to within the bounds of the specified element or region.\r\n   *  Multiple types supported:\r\n   *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n   *            If no element is found, no containment will be set.\r\n   *  Element: The resizable element will be contained to the bounding box of this element.\r\n   *  String: Possible values: \"parent\".\r\n   */\r\n  @Input() rzContainment: string | HTMLElement = null;\r\n\r\n  /**\r\n   * Snaps the resizing element to a grid, every x and y pixels.\r\n   * A number for both width and height or an array values like [ x, y ]\r\n   */\r\n  @Input() rzGrid: number | number[] = null;\r\n\r\n  /** The minimum width the resizable should be allowed to resize to. */\r\n  @Input() rzMinWidth: number = null;\r\n\r\n  /** The minimum height the resizable should be allowed to resize to. */\r\n  @Input() rzMinHeight: number = null;\r\n\r\n  /** The maximum width the resizable should be allowed to resize to. */\r\n  @Input() rzMaxWidth: number = null;\r\n\r\n  /** The maximum height the resizable should be allowed to resize to. */\r\n  @Input() rzMaxHeight: number = null;\r\n\r\n  /** Whether to prevent default event */\r\n  @Input() preventDefaultEvent = true;\r\n\r\n  /** emitted when start resizing */\r\n  @Output() rzStart = new EventEmitter<IResizeEvent>();\r\n\r\n  /** emitted when start resizing */\r\n  @Output() rzResizing = new EventEmitter<IResizeEvent>();\r\n\r\n  /** emitted when stop resizing */\r\n  @Output() rzStop = new EventEmitter<IResizeEvent>();\r\n\r\n  constructor(private el: ElementRef<HTMLElement>, private renderer: Renderer2) {\r\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\r\n      this.updateResizable();\r\n    }\r\n\r\n    if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\r\n      this.updateAspectRatio();\r\n    }\r\n\r\n    if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\r\n      this.updateContainment();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateResizable();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeHandles();\r\n    this._containment = null;\r\n    this._helperBlock.dispose();\r\n    this._helperBlock = null;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const elm = this.el.nativeElement;\r\n    this._initSize = Size.getCurrent(elm);\r\n    this._initPos = Position.getCurrent(elm);\r\n    this._currSize = Size.copy(this._initSize);\r\n    this._currPos = Position.copy(this._initPos);\r\n    this.updateAspectRatio();\r\n    this.updateContainment();\r\n  }\r\n\r\n  /** A method to reset size */\r\n  public resetSize() {\r\n    this._currSize = Size.copy(this._initSize);\r\n    this._currPos = Position.copy(this._initPos);\r\n    this.doResize();\r\n  }\r\n\r\n  /** A method to get current status */\r\n  public getStatus() {\r\n    if (!this._currPos || !this._currSize) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      size: {\r\n        width: this._currSize.width,\r\n        height: this._currSize.height\r\n      },\r\n      position: {\r\n        top: this._currPos.y,\r\n        left: this._currPos.x\r\n      }\r\n    };\r\n  }\r\n\r\n  private updateResizable() {\r\n    const element = this.el.nativeElement;\r\n\r\n    // clear handles:\r\n    this.renderer.removeClass(element, 'ng-resizable');\r\n    this.removeHandles();\r\n\r\n    // create new ones:\r\n    if (this._resizable) {\r\n      this.renderer.addClass(element, 'ng-resizable');\r\n      this.createHandles();\r\n    }\r\n  }\r\n\r\n  /** Use it to update aspect */\r\n  private updateAspectRatio() {\r\n    if (typeof this.rzAspectRatio === 'boolean') {\r\n      if (this.rzAspectRatio && this._currSize.height) {\r\n        this._aspectRatio = (this._currSize.width / this._currSize.height);\r\n      } else {\r\n        this._aspectRatio = 0;\r\n      }\r\n    } else {\r\n      let r = Number(this.rzAspectRatio);\r\n      this._aspectRatio = isNaN(r) ? 0 : r;\r\n    }\r\n  }\r\n\r\n  /** Use it to update containment */\r\n  private updateContainment() {\r\n    if (!this.rzContainment) {\r\n      this._containment = null;\r\n      return;\r\n    }\r\n\r\n    if (typeof this.rzContainment === 'string') {\r\n      if (this.rzContainment === 'parent') {\r\n        this._containment = this.el.nativeElement.parentElement;\r\n      } else {\r\n        this._containment = document.querySelector<HTMLElement>(this.rzContainment);\r\n      }\r\n    } else {\r\n      this._containment = this.rzContainment;\r\n    }\r\n  }\r\n\r\n  /** Use it to create handle divs */\r\n  private createHandles() {\r\n    if (!this.rzHandles) {\r\n      return;\r\n    }\r\n\r\n    let tmpHandleTypes: string[];\r\n    if (typeof this.rzHandles === 'string') {\r\n      if (this.rzHandles === 'all') {\r\n        tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\r\n      } else {\r\n        tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\r\n      }\r\n\r\n      for (let type of tmpHandleTypes) {\r\n        // default handle theme: ng-resizable-$type.\r\n        let handle = this.createHandleByType(type, `ng-resizable-${type}`);\r\n        if (handle) {\r\n          this._handleType.push(type);\r\n          this._handles[type] = handle;\r\n        }\r\n      }\r\n    } else {\r\n      tmpHandleTypes = Object.keys(this.rzHandles);\r\n      for (let type of tmpHandleTypes) {\r\n        // custom handle theme.\r\n        let handle = this.createHandleByType(type, this.rzHandles[type]);\r\n        if (handle) {\r\n          this._handleType.push(type);\r\n          this._handles[type] = handle;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /** Use it to create a handle */\r\n  private createHandleByType(type: string, css: string): ResizeHandle {\r\n    const _el = this.el.nativeElement;\r\n\r\n    if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\r\n      console.error('Invalid handle type:', type);\r\n      return null;\r\n    }\r\n\r\n    return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\r\n  }\r\n\r\n  private removeHandles() {\r\n    for (let type of this._handleType) {\r\n      this._handles[type].dispose();\r\n    }\r\n\r\n    this._handleType = [];\r\n    this._handles = {};\r\n  }\r\n\r\n  onMouseDown(event: MouseEvent | TouchEvent, handle: ResizeHandle) {\r\n    // skip right click;\r\n    if (event instanceof MouseEvent && event.button === 2) {\r\n      return;\r\n    }\r\n\r\n    if (this.preventDefaultEvent) {\r\n      // prevent default events\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this._handleResizing) {\r\n      this._origMousePos = Position.fromEvent(event);\r\n      this.startResize(handle);\r\n\r\n      this.subscribeEvents();\r\n    }\r\n  }\r\n\r\n  private subscribeEvents() {\r\n    this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n    this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n    this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    // fix for issue #164\r\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n    if (!isIEOrEdge) {\r\n      this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    }\r\n    this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n  }\r\n\r\n  private unsubscribeEvents() {\r\n    this.draggingSub.unsubscribe();\r\n    this.draggingSub = null;\r\n  }\r\n\r\n  onMouseLeave() {\r\n    if (this._handleResizing) {\r\n      this.stopResize();\r\n      this._origMousePos = null;\r\n      this.unsubscribeEvents();\r\n    }\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent | TouchEvent) {\r\n    if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\r\n      this.resizeTo(Position.fromEvent(event));\r\n      this.onResizing();\r\n    }\r\n  }\r\n\r\n  private startResize(handle: ResizeHandle) {\r\n    const elm = this.el.nativeElement;\r\n    this._origSize = Size.getCurrent(elm);\r\n    this._origPos = Position.getCurrent(elm); // x: left, y: top\r\n    this._currSize = Size.copy(this._origSize);\r\n    this._currPos = Position.copy(this._origPos);\r\n    if (this._containment) {\r\n      this.getBounding();\r\n    }\r\n    this.getGridSize();\r\n\r\n    // Add a transparent helper div:\r\n    this._helperBlock.add();\r\n    this._handleResizing = handle;\r\n    this.updateDirection();\r\n    this.rzStart.emit(this.getResizingEvent());\r\n  }\r\n\r\n  private stopResize() {\r\n    // Remove the helper div:\r\n    this._helperBlock.remove();\r\n    this.rzStop.emit(this.getResizingEvent());\r\n    this._handleResizing = null;\r\n    this._direction = null;\r\n    this._origSize = null;\r\n    this._origPos = null;\r\n    if (this._containment) {\r\n      this.resetBounding();\r\n    }\r\n  }\r\n\r\n  private onResizing() {\r\n    this.rzResizing.emit(this.getResizingEvent());\r\n  }\r\n\r\n  private getResizingEvent(): IResizeEvent {\r\n    return {\r\n      host: this.el.nativeElement,\r\n      handle: this._handleResizing ? this._handleResizing.el : null,\r\n      size: {\r\n        width: this._currSize.width,\r\n        height: this._currSize.height\r\n      },\r\n      position: {\r\n        top: this._currPos.y,\r\n        left: this._currPos.x\r\n      },\r\n      direction: { ...this._directionChanged },\r\n    };\r\n  }\r\n\r\n  private updateDirection() {\r\n    this._direction = {\r\n      n: !!this._handleResizing.type.match(/n/),\r\n      s: !!this._handleResizing.type.match(/s/),\r\n      w: !!this._handleResizing.type.match(/w/),\r\n      e: !!this._handleResizing.type.match(/e/)\r\n    };\r\n\r\n    this._directionChanged = { ...this._direction };\r\n\r\n    // if aspect ration should be preserved:\r\n    if (this.rzAspectRatio) {\r\n\r\n      // if north then west (unless ne)\r\n      if (this._directionChanged.n && !this._directionChanged.e) {\r\n        this._directionChanged.w = true;\r\n      }\r\n\r\n      // if south then east (unless sw)\r\n      if (this._directionChanged.s && !this._directionChanged.w) {\r\n        this._directionChanged.e = true;\r\n      }\r\n\r\n      // if east then south (unless ne)\r\n      if (this._directionChanged.e && !this._directionChanged.n) {\r\n        this._directionChanged.s = true;\r\n      }\r\n\r\n      // if west then south (unless nw)\r\n      if (this._directionChanged.w && !this._directionChanged.n) {\r\n        this._directionChanged.s = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  private resizeTo(p: Position) {\r\n    p.subtract(this._origMousePos);\r\n\r\n    const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\r\n    const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\r\n\r\n    if (this._direction.n) {\r\n      // n, ne, nw\r\n      this._currPos.y = this._origPos.y + tmpY;\r\n      this._currSize.height = this._origSize.height - tmpY;\r\n    } else if (this._direction.s) {\r\n      // s, se, sw\r\n      this._currSize.height = this._origSize.height + tmpY;\r\n    }\r\n\r\n    if (this._direction.e) {\r\n      // e, ne, se\r\n      this._currSize.width = this._origSize.width + tmpX;\r\n    } else if (this._direction.w) {\r\n      // w, nw, sw\r\n      this._currSize.width = this._origSize.width - tmpX;\r\n      this._currPos.x = this._origPos.x + tmpX;\r\n    }\r\n\r\n    this.checkBounds();\r\n    this.checkSize();\r\n    this.adjustByRatio();\r\n    this.doResize();\r\n  }\r\n\r\n  private doResize() {\r\n    const container = this.el.nativeElement;\r\n    if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\r\n      this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\r\n    }\r\n    if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\r\n      this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\r\n    }\r\n    this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\r\n    this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\r\n  }\r\n\r\n  private adjustByRatio() {\r\n    if (this._aspectRatio && !this._adjusted) {\r\n      if (this._direction.e || this._direction.w) {\r\n        const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\r\n\r\n        if (this._direction.n) {\r\n          this._currPos.y += this._currSize.height - newHeight;\r\n        }\r\n\r\n        this._currSize.height = newHeight;\r\n      } else {\r\n        const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\r\n\r\n        if (this._direction.n) {\r\n          this._currPos.x += this._currSize.width - newWidth;\r\n        }\r\n\r\n        this._currSize.width = newWidth;\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkBounds() {\r\n    if (this._containment) {\r\n      const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\r\n      const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\r\n\r\n      if (this._direction.n && (this._currPos.y + this._bounding.translateY < 0)) {\r\n        this._currPos.y = -this._bounding.translateY;\r\n        this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\r\n      }\r\n\r\n      if (this._direction.w && (this._currPos.x + this._bounding.translateX) < 0) {\r\n        this._currPos.x = -this._bounding.translateX;\r\n        this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\r\n      }\r\n\r\n      if (this._currSize.width > maxWidth) {\r\n        this._currSize.width = maxWidth;\r\n      }\r\n\r\n      if (this._currSize.height > maxHeight) {\r\n        this._currSize.height = maxHeight;\r\n      }\r\n\r\n      /**\r\n       * Fix Issue: Additional check for aspect ratio\r\n       * https://github.com/xieziyu/ngx-draggable-resize/issues/132\r\n       */\r\n      if (this._aspectRatio) {\r\n        this._adjusted = false;\r\n\r\n        if ((this._direction.w || this._direction.e) &&\r\n            (this._currSize.width / this._aspectRatio) >= maxHeight) {\r\n          const newWidth = Math.floor(maxHeight * this._aspectRatio);\r\n\r\n          if (this._direction.w) {\r\n            this._currPos.x += this._currSize.width - newWidth;\r\n          }\r\n\r\n          this._currSize.width = newWidth;\r\n          this._currSize.height = maxHeight;\r\n          this._adjusted = true;\r\n        }\r\n\r\n        if ((this._direction.n || this._direction.s) &&\r\n            (this._currSize.height * this._aspectRatio) >= maxWidth) {\r\n          const newHeight = Math.floor(maxWidth / this._aspectRatio);\r\n\r\n          if (this._direction.n) {\r\n            this._currPos.y += this._currSize.height - newHeight;\r\n          }\r\n\r\n          this._currSize.width = maxWidth;\r\n          this._currSize.height = newHeight;\r\n          this._adjusted = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkSize() {\r\n    const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\r\n    const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\r\n\r\n    if (this._currSize.height < minHeight) {\r\n      this._currSize.height = minHeight;\r\n\r\n      if (this._direction.n) {\r\n        this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\r\n      }\r\n    }\r\n\r\n    if (this._currSize.width < minWidth) {\r\n      this._currSize.width = minWidth;\r\n\r\n      if (this._direction.w) {\r\n        this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\r\n      }\r\n    }\r\n\r\n    if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\r\n      this._currSize.height = this.rzMaxHeight;\r\n\r\n      if (this._direction.n) {\r\n        this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\r\n      }\r\n    }\r\n\r\n    if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\r\n      this._currSize.width = this.rzMaxWidth;\r\n\r\n      if (this._direction.w) {\r\n        this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getBounding() {\r\n    const el = this._containment;\r\n    const computed = window.getComputedStyle(el);\r\n    if (computed) {\r\n      let p = computed.getPropertyValue('position');\r\n\r\n      const nativeEl = window.getComputedStyle(this.el.nativeElement);\r\n      let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\r\n\r\n      this._bounding = {};\r\n      this._bounding.width = el.clientWidth;\r\n      this._bounding.height = el.clientHeight;\r\n      this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\r\n      this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\r\n      this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\r\n      this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\r\n\r\n      if (transforms.length >= 6) {\r\n        this._bounding.translateX = parseInt(transforms[4], 10);\r\n        this._bounding.translateY = parseInt(transforms[5], 10);\r\n      } else {\r\n        this._bounding.translateX = 0;\r\n        this._bounding.translateY = 0;\r\n      }\r\n\r\n      this._bounding.position = computed.getPropertyValue('position');\r\n\r\n      if (p === 'static') {\r\n        this.renderer.setStyle(el, 'position', 'relative');\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetBounding() {\r\n    if (this._bounding && this._bounding.position === 'static') {\r\n      this.renderer.setStyle(this._containment, 'position', 'relative');\r\n    }\r\n    this._bounding = null;\r\n  }\r\n\r\n  private getGridSize() {\r\n    // set default value:\r\n    this._gridSize = { x: 1, y: 1 };\r\n\r\n    if (this.rzGrid) {\r\n      if (typeof this.rzGrid === 'number') {\r\n        this._gridSize = { x: this.rzGrid, y: this.rzGrid };\r\n      } else if (Array.isArray(this.rzGrid)) {\r\n        this._gridSize = { x: this.rzGrid[0], y: this.rzGrid[1] };\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularDraggableDirective } from './angular-draggable.directive';\r\nimport { AngularResizableDirective } from './angular-resizable.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    AngularDraggableDirective,\r\n    AngularResizableDirective\r\n  ],\r\n  exports: [\r\n    AngularDraggableDirective,\r\n    AngularResizableDirective\r\n  ]\r\n})\r\nexport class AngularDraggableModule { }\r\n"]},"metadata":{},"sourceType":"module"}