{"version":3,"file":"thumb-slider.component.d.ts","sources":["thumb-slider.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { SliderHandle } from '../slider.common';\nimport { Subject } from 'rxjs';\n/**\n * @hidden\n */\nexport declare class IgxSliderThumbComponent implements OnInit, OnDestroy {\n    private _elementRef;\n    private _isActive;\n    private _isPressed;\n    private _destroy$;\n    private readonly thumbPositionX;\n    isActive: boolean;\n    value: number;\n    continuous: boolean;\n    thumbLabelVisibilityDuration: any;\n    disabled: boolean;\n    onPan: Subject<number>;\n    stepDistance: number;\n    step: number;\n    templateRef: TemplateRef<any>;\n    context: any;\n    type: SliderHandle;\n    onThumbValueChange: EventEmitter<number>;\n    onChange: EventEmitter<any>;\n    onHoverChange: EventEmitter<boolean>;\n    tabindex: number;\n    zIndex: number;\n    readonly thumbFromClass: boolean;\n    readonly thumbToClass: boolean;\n    readonly thumbFromActiveClass: boolean;\n    readonly thumbToActiveClass: boolean;\n    readonly thumbPressedClass: boolean;\n    readonly nativeElement: any;\n    readonly destroy: Subject<boolean>;\n    constructor(_elementRef: ElementRef);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    onPinterEnter(): void;\n    onPointerLeave(): void;\n    onKeyDown(event: KeyboardEvent): void;\n    onBlur(): void;\n    onFocusListener(): void;\n    /**\n     * Show thumb label and ripple.\n     */\n    showThumbIndicators(): void;\n    /**\n     * Hide thumb label and ripple.\n     */\n    hideThumbIndicators(): void;\n    private updateThumbValue;\n    private calculateTrackUpdate;\n    private stepToProceed;\n    private toggleThumbIndicators;\n}\n"]}