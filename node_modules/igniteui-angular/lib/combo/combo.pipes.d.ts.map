{"version":3,"file":"combo.pipes.d.ts","sources":["combo.pipes.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PipeTransform } from '@angular/core';\nimport { FilteringLogic, IFilteringExpression } from '../data-operations/filtering-expression.interface';\nimport { ISortingExpression } from '../data-operations/sorting-expression.interface';\nimport { FilteringStrategy } from '../data-operations/filtering-strategy';\nimport { IgxComboBase } from './combo.common';\n/**\n * @hidden\n */\nexport declare class IgxComboFilteringPipe implements PipeTransform {\n    combo: IgxComboBase;\n    constructor(combo: IgxComboBase);\n    transform(collection: any[], expressions: IFilteringExpression[], logic: FilteringLogic): any[];\n}\n/** @hidden */\nexport declare class SimpleFilteringStrategy extends FilteringStrategy {\n    findMatchByExpression(rec: object, expr: IFilteringExpression): boolean;\n}\n/**\n * @hidden\n */\nexport declare class IgxComboSortingPipe implements PipeTransform {\n    constructor();\n    transform(collection: any[], expressions: ISortingExpression[]): any[];\n}\n/**\n * @hidden\n */\nexport declare class IgxComboGroupingPipe implements PipeTransform {\n    combo: IgxComboBase;\n    constructor(combo: IgxComboBase);\n    transform(collection: any[], groupKey: any): any[];\n}\n/**\n * @hidden\n */\nexport declare class IgxComboFilterConditionPipe implements PipeTransform {\n    transform(value: string): string;\n}\n"]}