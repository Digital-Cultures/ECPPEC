{"version":3,"file":"button.directive.d.ts","sources":["button.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';\nimport { DisplayDensityBase, IDisplayDensityOptions } from '../../core/density';\nexport declare class IgxButtonDirective extends DisplayDensityBase {\n    element: ElementRef;\n    private _renderer;\n    protected _displayDensityOptions: IDisplayDensityOptions;\n    /**\n     *@hidden\n     */\n    private _type;\n    /**\n     *@hidden\n     */\n    private _defaultType;\n    /**\n     *@hidden\n     */\n    private _cssClassPrefix;\n    /**\n     *@hidden\n     */\n    private _color;\n    /**\n     *@hidden\n     */\n    private _label;\n    /**\n     *@hidden\n     */\n    private _backgroundColor;\n    /**\n     *@hidden\n     */\n    private _disabled;\n    constructor(element: ElementRef, _renderer: Renderer2, _displayDensityOptions: IDisplayDensityOptions);\n    /**\n     * Returns the underlying DOM element\n     */\n    readonly nativeElement: any;\n    /**\n     * Called when the button is clicked\n     */\n    buttonClick: EventEmitter<any>;\n    /**\n     * Sets/gets the `role` attribute.\n     * ```typescript\n     * this.button.role = 'navbutton';\n     * ```\n     * ```typescript\n     * let buttonRole =  this.button.role;\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    role: string;\n    /**\n     * Sets the type of the button.\n     * ```html\n     * <button  igxButton= \"icon\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    type: string;\n    /**\n     * Sets the button text color.\n     * ```html\n     * <button igxButton=\"gradient\" igxButtonColor=\"blue\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    color: string;\n    /**\n     * Sets the background color of the button.\n     * ```html\n     * <button igxButton=\"raised\" igxButtonBackground=\"red\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    background: string;\n    /**\n     * Sets the `aria-label` attribute.\n     * ```html\n     * <button igxButton= \"flat\" igxLabel=\"Label\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    label: string;\n    /**\n     * Enables/disables the button.\n     *  ```html\n     * <button igxButton= \"fab\" [disabled]=\"true\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    disabled: any;\n    /**\n     * @hidden\n     */\n    readonly cssClassCosy: boolean;\n    /**\n     * @hidden\n     */\n    readonly cssClassCompact: boolean;\n    /**\n     * @hidden\n     */\n    readonly cssClassCosyFab: boolean;\n    /**\n     * @hidden\n     */\n    readonly cssClassCompactFab: boolean;\n    /**\n     * @hidden\n     */\n    readonly disabledAttribute: true;\n    /**\n     * Gets or sets whether the button is selected.\n     * Mainly used in the IgxButtonGroup component and it will have no effect if set separately.\n     * ```html\n     * <button igxButton=\"flat\" [selected]=\"button.selected\"></button>\n     * ```\n     * @memberof IgxButtonDirective\n     */\n    selected: boolean;\n    /**\n     *@hidden\n     */\n    onClick(ev: any): void;\n}\n/**\n * @hidden\n */\nexport declare class IgxButtonModule {\n}\n"]}