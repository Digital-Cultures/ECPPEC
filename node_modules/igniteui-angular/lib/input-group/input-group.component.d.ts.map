{"version":3,"file":"input-group.component.d.ts","sources":["input-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, QueryList } from '@angular/core';\nimport { IgxHintDirective } from '../directives/hint/hint.directive';\nimport { IgxInputDirective } from '../directives/input/input.directive';\nimport { IDisplayDensityOptions, DisplayDensityBase } from '../core/displayDensity';\nimport { IgxInputGroupBase } from './input-group.common';\nexport declare class IgxInputGroupComponent extends DisplayDensityBase implements IgxInputGroupBase {\n    private _element;\n    private _displayDensityOptions;\n    private _type;\n    private _filled;\n    private _supressInputAutofocus;\n    /**\n     * An ElementRef property of the `IgxInputGroupComponent`.\n     */\n    element: ElementRef;\n    /**\n     * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-input-group [id]=\"'igx-input-group-55'\"></igx-input-group>\n     * ```\n     */\n    id: string;\n    /**\n     * Property that enables/disables the autogenerated class of the `IgxInputGroupComponent`.\n     * By default applied the class is applied.\n     *```typescript\n     *@ViewChild(\"MyInputGroup\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *this.inputGroup.defaultClass = false;\n     *```\n     *}\n     */\n    defaultClass: boolean;\n    /**\n     * @hidden\n     */\n    hasPlaceholder: boolean;\n    /**\n     * @hidden\n     */\n    isRequired: boolean;\n    /**\n     * @hidden\n     */\n    isFocused: boolean;\n    /**\n     * @hidden\n     */\n    isBox: boolean;\n    /**\n     * @hidden\n     */\n    isBorder: boolean;\n    /**\n     * @hidden\n     */\n    isSearch: boolean;\n    /**\n     * @hidden\n     */\n    isFluentSearch: boolean;\n    /**\n     * @hidden\n     */\n    isFluent: boolean;\n    /**\n     * An @Input property that disables the `IgxInputGroupComponent`.\n     * ```html\n     * <igx-input-group [disabled]=\"'true'\"></igx-input-group>\n     * ```\n     */\n    disabled: boolean;\n    /**\n     * @hidden\n     */\n    readonly validClass: boolean;\n    /**\n     * @hidden\n     */\n    readonly invalidClass: boolean;\n    /**\n     * @hidden\n     */\n    hasWarning: boolean;\n    /**\n     * @hidden\n     */\n    protected hints: QueryList<IgxHintDirective>;\n    /**\n     * @hidden\n     */\n    protected input: IgxInputDirective;\n    /**\n     *@hidden\n     */\n    onClick(event: any): void;\n    /**\n     * An @Input property that sets how the input will be styled.\n     * The allowed values are `line`, `box`, `border`, `fluent`, `search` and `fluentSearch`. The default is `line`.\n     * ```html\n     *<igx-input-group [type]=\"'search'\">\n     * ```\n     */\n    /**\n    * Returns the type of the `IgxInputGroupComponent`. How the input is styled.\n    * Values are `line` - 0, `box` - 1, `border` - 2,  `fluent` - 3 `fluentSearch` - 4 and `search` - 5. The default is `line`.\n    * ```typescript\n    *@ViewChild(\"MyInputGroup\")\n    *public inputGroup: IgxInputGroupComponent;\n    *ngAfterViewInit(){\n    *    let inputType = this.inputGroup.type;\n    *}\n    * ```\n    */\n    type: string;\n    /**\n     * Returns whether the input element of the input group will be automatically focused on click.\n     * ```typescript\n     * let supressInputAutofocus = this.inputGroup.supressInputAutofocus;\n     * ```\n     */\n    /**\n    * Sets whether the input element of the input group will be automatically focused on click.\n    * ```html\n    * <igx-input-group [supressInputAutofocus]=\"true\"></igx-input-group>\n    * ```\n    */\n    supressInputAutofocus: boolean;\n    /**\n     *@hidden\n     */\n    readonly isFilled: any;\n    /**\n     *@hidden\n     */\n    readonly isDisplayDensityCosy: boolean;\n    /**\n     *@hidden\n     */\n    readonly isDisplayDensityComfortable: boolean;\n    /**\n     *@hidden\n     */\n    readonly isDisplayDensityCompact: boolean;\n    constructor(_element: ElementRef, _displayDensityOptions: IDisplayDensityOptions);\n    /**\n     * Returns whether the `IgxInputGroupComponent` has hints.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let inputHints = this.inputGroup.hasHints;\n     *}\n     * ```\n     */\n    readonly hasHints: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` has border.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let inputBroder = this.inputGroup.hasBorder;\n     *}\n     * ```\n     */\n    readonly hasBorder: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is line.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeLine = this.inputGroup.isTypeLine;\n     *}\n     * ```\n     */\n    readonly isTypeLine: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is box.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeBox = this.inputGroup.isTypeBox;\n     *}\n     *```\n     */\n    readonly isTypeBox: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is border.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeBorder = this.inputGroup.isTypeBorder;\n     *}\n     * ```\n     */\n    readonly isTypeBorder: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is Fluent.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeFluent = this.inputGroup.isTypeFluent;\n     *}\n     * ```\n     */\n    readonly isTypeFluent: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is search.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeSearch = this.inputGroup.isTypeSearch;\n     *}\n     * ```\n     */\n    readonly isTypeSearch: boolean;\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is fluentSearch.\n     * ```typescript\n     *@ViewChild(\"MyInputGroup1\")\n     *public inputGroup: IgxInputGroupComponent;\n     *ngAfterViewInit(){\n     *    let isTypeFluentSearch = this.inputGroup.isTypeFluentSearch;\n     *}\n     * ```\n     */\n    readonly isTypeFluentSearch: boolean;\n    filled: boolean;\n}\n/**\n * @hidden\n */\nexport declare class IgxInputGroupModule {\n}\n"]}