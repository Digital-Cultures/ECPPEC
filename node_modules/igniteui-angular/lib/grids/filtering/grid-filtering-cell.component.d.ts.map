{"version":3,"file":"grid-filtering-cell.component.d.ts","sources":["grid-filtering-cell.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, TemplateRef, AfterViewInit, ElementRef, OnInit, DoCheck } from '@angular/core';\nimport { IgxColumnComponent } from '../column.component';\nimport { IFilteringExpression } from '../../data-operations/filtering-expression.interface';\nimport { IBaseChipEventArgs, IgxChipsAreaComponent, IgxChipComponent } from '../../chips';\nimport { IgxFilteringService, ExpressionUI } from './grid-filtering.service';\nimport { IgxGridNavigationService } from '../grid-navigation.service';\n/**\n * @hidden\n */\nexport declare class IgxGridFilteringCellComponent implements AfterViewInit, OnInit, DoCheck {\n    cdr: ChangeDetectorRef;\n    filteringService: IgxFilteringService;\n    navService: IgxGridNavigationService;\n    private baseClass;\n    private currentTemplate;\n    expressionsList: ExpressionUI[];\n    moreFiltersCount: number;\n    column: IgxColumnComponent;\n    protected emptyFilter: TemplateRef<any>;\n    protected defaultFilter: TemplateRef<any>;\n    protected complexFilter: TemplateRef<any>;\n    protected chipsArea: IgxChipsAreaComponent;\n    protected moreIcon: ElementRef;\n    protected ghostChip: IgxChipComponent;\n    protected complexChip: IgxChipComponent;\n    cssClass: string;\n    constructor(cdr: ChangeDetectorRef, filteringService: IgxFilteringService, navService: IgxGridNavigationService);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    onTabKeyDown(eventArgs: any): void;\n    onShiftTabKeyDown(eventArgs: any): void;\n    /**\n     * Returns whether a chip with a given index is visible or not.\n     */\n    isChipVisible(index: number): boolean;\n    /**\n     * Updates the filtering cell area.\n     */\n    updateFilterCellArea(): void;\n    readonly template: TemplateRef<any>;\n    /**\n     * Gets the context passed to the filter template.\n     * @memberof IgxGridFilteringCellComponent\n     */\n    readonly context: {\n        column: IgxColumnComponent;\n    };\n    /**\n     * Chip clicked event handler.\n     */\n    onChipClicked(expression?: IFilteringExpression): void;\n    /**\n     * Chip removed event handler.\n     */\n    onChipRemoved(eventArgs: IBaseChipEventArgs, item: ExpressionUI): void;\n    /**\n     * Clears the filtering.\n     */\n    clearFiltering(): void;\n    /**\n     * Chip keydown event handler.\n     */\n    onChipKeyDown(eventArgs: KeyboardEvent, expression?: IFilteringExpression): void;\n    /**\n     * Returns the filtering indicator class.\n     */\n    filteringIndicatorClass(): {\n        [x: string]: boolean;\n    };\n    /**\n     * Focus a chip depending on the current visible template.\n     */\n    focusChip(focusFirst?: boolean): void;\n    private removeExpression;\n    private isMoreIconHidden;\n    private updateVisibleFilters;\n    private isFirstElementFocused;\n    private isLastElementFocused;\n    private focusFirstElement;\n    private focusElement;\n    private isColumnRightVisible;\n    private isColumnLeftVisible;\n}\n"]}