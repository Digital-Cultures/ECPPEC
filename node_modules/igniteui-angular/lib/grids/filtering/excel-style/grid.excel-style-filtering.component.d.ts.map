{"version":3,"file":"grid.excel-style-filtering.component.d.ts","sources":["grid.excel-style-filtering.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, TemplateRef, OnDestroy, AfterViewInit, ElementRef, OnInit } from '@angular/core';\nimport { IgxOverlayService } from '../../../services/index';\nimport { IgxFilteringService } from '../grid-filtering.service';\nimport { IFilteringOperation } from '../../../data-operations/filtering-condition';\nimport { IgxExcelStyleSearchComponent } from './excel-style-search.component';\nimport { IgxExcelStyleCustomDialogComponent } from './excel-style-custom-dialog.component';\nimport { Subscription } from 'rxjs';\nimport { IgxExcelStyleSortingComponent } from './excel-style-sorting.component';\nimport { ISelectionEventArgs, IgxDropDownComponent } from '../../../drop-down';\nimport { IgxColumnComponent } from '../../column.component';\n/**\n *@hidden\n */\nexport declare class FilterListItem {\n    value: any;\n    label: any;\n    isSelected: boolean;\n    indeterminate: boolean;\n    isSpecial: boolean;\n    isBlanks: boolean;\n}\nexport declare class IgxExcelStyleSortingTemplateDirective {\n    template: TemplateRef<any>;\n    constructor(template: TemplateRef<any>);\n}\nexport declare class IgxExcelStyleMovingTemplateDirective {\n    template: TemplateRef<any>;\n    constructor(template: TemplateRef<any>);\n}\nexport declare class IgxExcelStyleHidingTemplateDirective {\n    template: TemplateRef<any>;\n    constructor(template: TemplateRef<any>);\n}\nexport declare class IgxExcelStylePinningTemplateDirective {\n    template: TemplateRef<any>;\n    constructor(template: TemplateRef<any>);\n}\n/**\n * @hidden\n */\nexport declare class IgxGridExcelStyleFilteringComponent implements OnDestroy, OnInit, AfterViewInit {\n    private cdr;\n    private static readonly filterOptimizationThreshold;\n    private shouldOpenSubMenu;\n    private expressionsList;\n    private destroy$;\n    private containsNullOrEmpty;\n    private selectAllSelected;\n    private selectAllIndeterminate;\n    private filterValues;\n    protected columnMoving: Subscription;\n    column: IgxColumnComponent;\n    filteringService: IgxFilteringService;\n    listData: FilterListItem[];\n    uniqueValues: any[];\n    overlayService: IgxOverlayService;\n    overlayComponentId: string;\n    private _subMenuPositionSettings;\n    private _subMenuOverlaySettings;\n    className: string;\n    mainDropdown: ElementRef;\n    subMenu: IgxDropDownComponent;\n    customDialog: IgxExcelStyleCustomDialogComponent;\n    protected excelStyleSearch: IgxExcelStyleSearchComponent;\n    protected excelStyleSorting: IgxExcelStyleSortingComponent;\n    protected defaultExcelStyleSortingTemplate: TemplateRef<any>;\n    protected defaultExcelStyleHidingTemplate: TemplateRef<any>;\n    protected defaultExcelStyleMovingTemplate: TemplateRef<any>;\n    protected defaultExcelStylePinningTemplate: TemplateRef<any>;\n    isColumnPinnable: boolean;\n    readonly grid: any;\n    readonly conditions: string[];\n    readonly subMenuText: any;\n    constructor(cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    clearFilterClass(): \"igx-excel-filter__actions-clear\" | \"igx-excel-filter__actions-clear--disabled\";\n    pinClass(): \"igx-excel-filter__actions-pin\" | \"igx-excel-filter__actions-pin--disabled\";\n    initialize(column: IgxColumnComponent, filteringService: IgxFilteringService, overlayService: IgxOverlayService, overlayComponentId: string): void;\n    /**\n     * Returns the filtering operation condition for a given value.\n     */\n    getCondition(value: string): IFilteringOperation;\n    /**\n     * Returns the translated condition name for a given value.\n     */\n    translateCondition(value: string): string;\n    onPin(): void;\n    onHide(): void;\n    onTextFilterClick(eventArgs: any): void;\n    onTextFilterKeyDown(eventArgs: any): void;\n    onSubMenuClosed(): void;\n    onSubMenuSelection(eventArgs: ISelectionEventArgs): void;\n    private areExpressionsSelectable;\n    private areExpressionsValuesInTheList;\n    populateColumnData(): void;\n    private renderColumnValuesRemotely;\n    renderColumnValuesFromData(): void;\n    private renderValues;\n    private generateUniqueValues;\n    private generateFilterValues;\n    private generateListData;\n    private getColumnFilterExpressionsTree;\n    private addBooleanItems;\n    private addItems;\n    private addSelectAllItem;\n    private addBlanksItem;\n    private sortData;\n    private selectAllFilterItems;\n    readonly sortingTemplate: any;\n    readonly movingTemplate: any;\n    readonly pinningTemplate: any;\n    readonly hidingTemplate: any;\n    readonly applyButtonDisabled: boolean;\n    applyFilter(): void;\n    closeDropdown(): void;\n    onKeyDown(eventArgs: any): void;\n    clearFilter(): void;\n    onClearFilterKeyDown(eventArgs: any): void;\n    showCustomFilterItem(): boolean;\n    private createCondition;\n}\n"]}