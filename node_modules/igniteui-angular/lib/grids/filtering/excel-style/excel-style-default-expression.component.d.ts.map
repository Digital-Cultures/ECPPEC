{"version":3,"file":"excel-style-default-expression.component.d.ts","sources":["excel-style-default-expression.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { IgxColumnComponent } from '../../column.component';\nimport { ExpressionUI } from '../grid-filtering.service';\nimport { IgxButtonGroupComponent } from '../../../buttonGroup/buttonGroup.component';\nimport { IgxDropDownComponent } from '../../../drop-down/index';\nimport { IgxInputGroupComponent, IgxInputDirective } from '../../../input-group/index';\nimport { IFilteringOperation } from '../../../data-operations/filtering-condition';\nimport { IBaseEventArgs } from '../../../core/utils';\nimport { FilteringLogic } from '../../../data-operations/filtering-expression.interface';\nimport { DisplayDensity } from '../../../core/density';\n/**\n * @hidden\n */\nexport interface ILogicOperatorChangedArgs extends IBaseEventArgs {\n    target: ExpressionUI;\n    newValue: FilteringLogic;\n}\n/**\n * @hidden\n */\nexport declare class IgxExcelStyleDefaultExpressionComponent implements AfterViewInit {\n    cdr: ChangeDetectorRef;\n    private _dropDownOverlaySettings;\n    column: IgxColumnComponent;\n    expressionUI: ExpressionUI;\n    expressionsList: Array<ExpressionUI>;\n    grid: any;\n    displayDensity: DisplayDensity;\n    onExpressionRemoved: EventEmitter<ExpressionUI>;\n    onLogicOperatorChanged: EventEmitter<ILogicOperatorChangedArgs>;\n    protected inputGroupConditions: IgxInputGroupComponent;\n    protected inputValuesDirective: IgxInputDirective;\n    protected dropdownConditions: IgxDropDownComponent;\n    protected logicOperatorButtonGroup: IgxButtonGroupComponent;\n    protected readonly inputValuesElement: IgxInputDirective;\n    readonly isLast: boolean;\n    readonly isSingle: boolean;\n    readonly inputConditionsPlaceholder: string;\n    readonly inputValuePlaceholder: string;\n    readonly type: \"text\" | \"number\";\n    constructor(cdr: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    focus(): void;\n    isConditionSelected(conditionName: string): boolean;\n    getConditionName(condition: IFilteringOperation): string;\n    getInputWidth(): string;\n    readonly conditions: string[];\n    translateCondition(value: string): string;\n    getIconName(): string;\n    toggleCustomDialogDropDown(): void;\n    getCondition(value: string): IFilteringOperation;\n    onConditionsChanged(eventArgs: any): void;\n    onValuesInput(eventArgs: any): void;\n    onLogicOperatorButtonClicked(eventArgs: any, buttonIndex: number): void;\n    onLogicOperatorKeyDown(eventArgs: any, buttonIndex: number): void;\n    onRemoveButtonClick(): void;\n    onInputConditionsKeyDown(eventArgs: any): void;\n}\n"]}