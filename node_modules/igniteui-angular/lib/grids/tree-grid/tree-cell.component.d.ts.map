{"version":3,"file":"tree-cell.component.d.ts","sources":["tree-cell.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, NgZone, OnInit, TemplateRef } from '@angular/core';\nimport { IgxGridCellComponent } from '../cell.component';\nimport { GridBaseAPIService } from '../api.service';\nimport { PlatformUtil } from '../../core/utils';\nimport { IgxGridBaseComponent, IGridDataBindable } from '../grid';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../../core/grid-selection';\nimport { HammerGesturesManager } from '../../core/touch';\nexport declare class IgxTreeGridCellComponent extends IgxGridCellComponent implements OnInit {\n    protected zone: NgZone;\n    document: any;\n    protected platformUtil: PlatformUtil;\n    private treeGridAPI;\n    constructor(selectionService: IgxGridSelectionService, crudService: IgxGridCRUDService, gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>, cdr: ChangeDetectorRef, element: ElementRef, zone: NgZone, touchManager: HammerGesturesManager, document: any, platformUtil: PlatformUtil);\n    /**\n     * @hidden\n     */\n    expanded: boolean;\n    /**\n     * @hidden\n     */\n    level: number;\n    /**\n     * @hidden\n     */\n    showIndicator: boolean;\n    indicator: ElementRef;\n    indentationDiv: ElementRef;\n    defaultContentElement: ElementRef;\n    /**\n    * @hidden\n    */\n    protected defaultExpandedTemplate: TemplateRef<any>;\n    /**\n    * @hidden\n    */\n    protected defaultCollapsedTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    isLoading: boolean;\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    toggle(event: Event): void;\n    /**\n     * @hidden\n     */\n    onIndicatorFocus(): void;\n    /**\n     * @hidden\n     */\n    onLoadingDblClick(event: Event): void;\n    /**\n     * @hidden\n     */\n    calculateSizeToFit(range: any): number;\n    /**\n     * @hidden\n    */\n    readonly iconTemplate: any;\n}\n"]}