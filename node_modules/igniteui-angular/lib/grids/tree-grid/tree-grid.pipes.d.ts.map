{"version":3,"file":"tree-grid.pipes.d.ts","sources":["tree-grid.pipes.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PipeTransform } from '@angular/core';\nimport { GridBaseAPIService } from '../api.service';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IgxGridBaseComponent, IGridDataBindable } from '../grid';\nimport { ISortingExpression } from '../../data-operations/sorting-expression.interface';\n/**\n *@hidden\n */\nexport declare class IgxTreeGridHierarchizingPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>);\n    transform(collection: any[], primaryKey: string, foreignKey: string, childDataKey: string, id: string, pipeTrigger: number): ITreeGridRecord[];\n    private getRowID;\n    private hierarchizeFlatData;\n    private setIndentationLevels;\n    private hierarchizeRecursive;\n}\n/**\n *@hidden\n */\nexport declare class IgxTreeGridFlatteningPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>);\n    transform(collection: ITreeGridRecord[], id: string, expandedLevels: number, expandedStates: Map<any, boolean>, pipeTrigger: number): any[];\n    private getFlatDataRecursive;\n    private updateNonProcessedRecordExpansion;\n}\n/** @hidden */\nexport declare class IgxTreeGridSortingPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>);\n    transform(hierarchicalData: ITreeGridRecord[], expressions: ISortingExpression[], id: string, pipeTrigger: number): ITreeGridRecord[];\n    private flattenTreeGridRecords;\n}\n/** @hidden */\nexport declare class IgxTreeGridPagingPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>);\n    transform(collection: ITreeGridRecord[], page: number, perPage: number, id: string, pipeTrigger: number): ITreeGridRecord[];\n}\n/** @hidden */\nexport declare class IgxTreeGridTransactionPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>);\n    transform(collection: any[], id: string, pipeTrigger: number): any[];\n}\n"]}