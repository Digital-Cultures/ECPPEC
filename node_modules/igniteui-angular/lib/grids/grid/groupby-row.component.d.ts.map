{"version":3,"file":"groupby-row.component.d.ts","sources":["groupby-row.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, TemplateRef } from '@angular/core';\nimport { IGroupByRecord } from '../../data-operations/groupby-record.interface';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseComponent, IGridDataBindable } from '../grid-base.component';\nimport { IgxGridSelectionService, ISelectionNode } from '../../core/grid-selection';\nexport declare class IgxGridGroupByRowComponent {\n    gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>;\n    private gridSelection;\n    element: ElementRef;\n    cdr: ChangeDetectorRef;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent & IGridDataBindable>, gridSelection: IgxGridSelectionService, element: ElementRef, cdr: ChangeDetectorRef);\n    /**\n     * @hidden\n     */\n    protected defaultCssClass: string;\n    /**\n     * @hidden\n     */\n    protected paddingIndentationCssClass: string;\n    /**\n    * @hidden\n    */\n    protected defaultGroupByExpandedTemplate: TemplateRef<any>;\n    /**\n    * @hidden\n    */\n    protected defaultGroupByCollapsedTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected isFocused: boolean;\n    /**\n     * Returns whether the row is focused.\n     * ```\n     * let gridRowFocused = this.grid1.rowList.first.focused;\n     * ```\n     */\n    readonly focused: boolean;\n    /**\n     * An @Input property that sets the index of the row.\n     * ```html\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    index: number;\n    /**\n     * An @Input property that sets the id of the grid the row belongs to.\n     * ```html\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    gridID: string;\n    /**\n     * An @Input property that specifies the group record the component renders for.\n     * ```typescript\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    groupRow: IGroupByRecord;\n    /**\n     * Returns a reference of the content of the group.\n     * ```typescript\n     * const groupRowContent = this.grid1.rowList.first.groupContent;\n     * ```\n     */\n    groupContent: ElementRef;\n    /**\n     * Returns whether the group row is expanded.\n     * ```typescript\n     * const groupRowExpanded = this.grid1.rowList.first.expanded;\n     * ```\n     */\n    readonly expanded: boolean;\n    /**\n     * @hidden\n     */\n    tabindex: number;\n    /**\n     * @hidden\n     */\n    readonly describedBy: string;\n    readonly dataRowIndex: number;\n    /**\n     * Returns a reference to the underlying HTML element.\n     * ```typescript\n     * const groupRowElement = this.nativeElement;\n     * ```\n     */\n    readonly nativeElement: any;\n    /**\n     * Returns the style classes applied to the group rows.\n     * ```typescript\n     * const groupCssStyles = this.grid1.rowList.first.styleClasses;\n     * ```\n     */\n    readonly styleClasses: string;\n    /**\n     *@hidden\n     */\n    onFocus(): void;\n    /**\n     *@hidden\n     */\n    onBlur(): void;\n    /**\n     * Toggles the group row.\n     * ```typescript\n     * this.grid1.rowList.first.toggle()\n     * ```\n     */\n    toggle(): void;\n    readonly iconTemplate: any;\n    protected readonly selectionNode: ISelectionNode;\n    /**\n     * @hidden\n     */\n    onKeydown(event: any): void;\n    /**\n     * Returns a reference to the `IgxGridComponent` the `IgxGridGroupByRowComponent` belongs to.\n     * ```typescript\n     * this.grid1.rowList.first.grid;\n     * ```\n     */\n    readonly grid: any;\n    /**\n     * @hidden\n     */\n    readonly dataType: any;\n    private handleTabKey;\n    private isKeySupportedInGroupRow;\n    private isToggleKey;\n}\n"]}