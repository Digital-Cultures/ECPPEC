/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../context"
import { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  OrderByDate: { // input type
    election_date: NexusGenEnums['SortOrder']; // SortOrder!
  }
}

export interface NexusGenEnums {
  LocationType: "borough" | "county"
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Query: {};
  artefact: { // root type
    artefact_link?: string | null; // String
    artefact_name?: string | null; // String
    artefact_type?: string | null; // String
    election_id?: string | null; // String
  }
  candidate: { // root type
    candidate_id: number; // Int!
    candidate_name?: string | null; // String
    short_name?: string | null; // String
    title?: string | null; // String
  }
  candidatesElection: { // root type
    candidate_id: number; // Int!
    election_id: string; // String!
    running_as?: string | null; // String
  }
  election: { // root type
    by_election_cause?: string | null; // String
    by_election_general?: string | null; // String
    constituency?: string | null; // String
    contested?: string | null; // String
    countyboroughuniv?: string | null; // String
    election_month?: string | null; // String
    election_year?: string | null; // String
    franchise_detail?: string | null; // String
    franchise_type?: string | null; // String
    latitude?: string | null; // String
    longitude?: string | null; // String
    notes?: string | null; // String
  }
  electionDates: { // root type
    election_date?: NexusGenScalars['DateTime'] | null; // DateTime
    election_id: string; // String!
  }
  locations: { // root type
    lat?: number | null; // Float
    lng?: number | null; // Float
    location_type?: string | null; // String
    name_long?: string | null; // String
    name_short?: string | null; // String
  }
  poll_books: { // root type
    Citation?: string | null; // String
    ElectionCode?: string | null; // String
    Holdings?: string | null; // String
    Notes?: string | null; // String
    PollBookCode?: string | null; // String
    PrintMS?: string | null; // String
    Source?: string | null; // String
  }
  vote: { // root type
    line?: string | null; // String
    page?: string | null; // String
  }
  voter: { // root type
    abode?: string | null; // String
    city?: string | null; // String
    class?: string | null; // String
    county?: string | null; // String
    forename?: string | null; // String
    guild?: string | null; // String
    notes?: string | null; // String
    occupation?: string | null; // String
    parish?: string | null; // String
    street?: string | null; // String
    suffix?: string | null; // String
    surname?: string | null; // String
    title?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Query: { // field return type
    artefact: NexusGenRootTypes['artefact'][]; // [artefact!]!
    candidate: NexusGenRootTypes['candidate'][]; // [candidate!]!
    candidates_elections: NexusGenRootTypes['candidatesElection'][]; // [candidatesElection!]!
    election: NexusGenRootTypes['election'][]; // [election!]!
    election_dates: NexusGenRootTypes['electionDates'][]; // [electionDates!]!
    location: NexusGenRootTypes['locations'][]; // [locations!]!
    poll_book: NexusGenRootTypes['poll_books'][]; // [poll_books!]!
    vote: NexusGenRootTypes['vote'][]; // [vote!]!
    voter: NexusGenRootTypes['voter'][]; // [voter!]!
  }
  artefact: { // field return type
    artefact_link: string | null; // String
    artefact_name: string | null; // String
    artefact_type: string | null; // String
    election_id: string | null; // String
    elections: Array<NexusGenRootTypes['election'] | null> | null; // [election]
  }
  candidate: { // field return type
    candidate_id: number; // Int!
    candidate_name: string | null; // String
    candidates_elections: Array<NexusGenRootTypes['candidatesElection'] | null> | null; // [candidatesElection]
    short_name: string | null; // String
    title: string | null; // String
    voteCount: number | null; // Int
    votes: Array<NexusGenRootTypes['vote'] | null> | null; // [vote]
  }
  candidatesElection: { // field return type
    candidate: Array<NexusGenRootTypes['candidate'] | null> | null; // [candidate]
    candidate_id: number; // Int!
    election: Array<NexusGenRootTypes['election'] | null> | null; // [election]
    election_id: string; // String!
    running_as: string | null; // String
  }
  election: { // field return type
    by_election_cause: string | null; // String
    by_election_general: string | null; // String
    candidates_elections: Array<NexusGenRootTypes['candidatesElection'] | null> | null; // [candidatesElection]
    constituency: string | null; // String
    contested: string | null; // String
    countyboroughuniv: string | null; // String
    election_month: string | null; // String
    election_year: string | null; // String
    franchise_detail: string | null; // String
    franchise_type: string | null; // String
    latitude: string | null; // String
    longitude: string | null; // String
    notes: string | null; // String
    poll_books: Array<NexusGenRootTypes['poll_books'] | null> | null; // [poll_books]
  }
  electionDates: { // field return type
    election: Array<NexusGenRootTypes['election'] | null> | null; // [election]
    election_date: NexusGenScalars['DateTime'] | null; // DateTime
    election_id: string; // String!
  }
  locations: { // field return type
    lat: number | null; // Float
    lng: number | null; // Float
    location_type: string | null; // String
    name_long: string | null; // String
    name_short: string | null; // String
  }
  poll_books: { // field return type
    Citation: string | null; // String
    ElectionCode: string | null; // String
    Holdings: string | null; // String
    Notes: string | null; // String
    PollBookCode: string | null; // String
    PrintMS: string | null; // String
    Source: string | null; // String
  }
  vote: { // field return type
    candidate: Array<NexusGenRootTypes['candidate'] | null> | null; // [candidate]
    line: string | null; // String
    page: string | null; // String
    voter: Array<NexusGenRootTypes['voter'] | null> | null; // [voter]
  }
  voter: { // field return type
    abode: string | null; // String
    city: string | null; // String
    class: string | null; // String
    county: string | null; // String
    forename: string | null; // String
    guild: string | null; // String
    notes: string | null; // String
    occupation: string | null; // String
    parish: string | null; // String
    street: string | null; // String
    suffix: string | null; // String
    surname: string | null; // String
    title: string | null; // String
    vote: Array<NexusGenRootTypes['vote'] | null> | null; // [vote]
  }
}

export interface NexusGenFieldTypeNames {
  Query: { // field return type name
    artefact: 'artefact'
    candidate: 'candidate'
    candidates_elections: 'candidatesElection'
    election: 'election'
    election_dates: 'electionDates'
    location: 'locations'
    poll_book: 'poll_books'
    vote: 'vote'
    voter: 'voter'
  }
  artefact: { // field return type name
    artefact_link: 'String'
    artefact_name: 'String'
    artefact_type: 'String'
    election_id: 'String'
    elections: 'election'
  }
  candidate: { // field return type name
    candidate_id: 'Int'
    candidate_name: 'String'
    candidates_elections: 'candidatesElection'
    short_name: 'String'
    title: 'String'
    voteCount: 'Int'
    votes: 'vote'
  }
  candidatesElection: { // field return type name
    candidate: 'candidate'
    candidate_id: 'Int'
    election: 'election'
    election_id: 'String'
    running_as: 'String'
  }
  election: { // field return type name
    by_election_cause: 'String'
    by_election_general: 'String'
    candidates_elections: 'candidatesElection'
    constituency: 'String'
    contested: 'String'
    countyboroughuniv: 'String'
    election_month: 'String'
    election_year: 'String'
    franchise_detail: 'String'
    franchise_type: 'String'
    latitude: 'String'
    longitude: 'String'
    notes: 'String'
    poll_books: 'poll_books'
  }
  electionDates: { // field return type name
    election: 'election'
    election_date: 'DateTime'
    election_id: 'String'
  }
  locations: { // field return type name
    lat: 'Float'
    lng: 'Float'
    location_type: 'String'
    name_long: 'String'
    name_short: 'String'
  }
  poll_books: { // field return type name
    Citation: 'String'
    ElectionCode: 'String'
    Holdings: 'String'
    Notes: 'String'
    PollBookCode: 'String'
    PrintMS: 'String'
    Source: 'String'
  }
  vote: { // field return type name
    candidate: 'candidate'
    line: 'String'
    page: 'String'
    voter: 'voter'
  }
  voter: { // field return type name
    abode: 'String'
    city: 'String'
    class: 'String'
    county: 'String'
    forename: 'String'
    guild: 'String'
    notes: 'String'
    occupation: 'String'
    parish: 'String'
    street: 'String'
    suffix: 'String'
    surname: 'String'
    title: 'String'
    vote: 'vote'
  }
}

export interface NexusGenArgTypes {
  Query: {
    artefact: { // args
      artefact_name?: string | null; // String
      artefact_type?: string | null; // String
    }
    candidate: { // args
      candidate_id?: number | null; // Int
      candidate_name?: string | null; // String
    }
    candidates_elections: { // args
      candidate_id?: number | null; // Int
      election_id?: string | null; // String
    }
    election: { // args
      contested?: string | null; // String
      election_year?: string | null; // String
    }
    election_dates: { // args
      election_year?: string | null; // String
      orderBy?: NexusGenInputs['OrderByDate'] | null; // OrderByDate
    }
    location: { // args
      location_type?: NexusGenEnums['LocationType'] | null; // LocationType
      searchString?: string | null; // String
    }
    poll_book: { // args
      contested?: string | null; // String
      election_year?: string | null; // String
    }
    voter: { // args
      forename?: string | null; // String
      guild?: string | null; // String
      occupation?: string | null; // String
      surname?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}