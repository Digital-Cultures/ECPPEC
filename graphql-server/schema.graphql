### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum GroupCategory {
  by_election_cause
  by_election_general
  constituency
  contested
  countyboroughuniv
  election_month
  election_year
  franchise_type
}

enum LocationType {
  borough
  county
}

input OrderByDate {
  election_date: SortOrder!
}

type Query {
  artefact(artefact_name: String, artefact_type: String): [artefact!]!
  candidate(candidate_id: Int, candidate_name: String): [candidate!]!
  candidates_elections(candidate_id: Int, election_id: String): [candidatesElection!]!
  election(contested: String, election_end_year: String = "9999", election_start_year: String = "0000"): [election!]!
  election_dates(election_year: String, orderBy: OrderByDate): [electionDates!]!
  election_group_by(groupBy: [GroupCategory]): [election_group_by!]!
  location(location_type: LocationType, searchString: String): [locations!]!
  poll_book(contested: String, election_year: String): [poll_books!]!
  vote: [vote!]!
  voter(forename: String, guild: String, occupation: String, surname: String): [voter!]!
}

enum SortOrder {
  asc
  desc
}

type aggregate {
  count: Int
}

type artefact {
  artefact_link: String
  artefact_name: String
  artefact_type: String
  election_id: String
  elections: [election]
}

type candidate {
  candidate_id: Int!
  candidate_name: String
  candidates_elections: [candidatesElection]
  short_name: String
  title: String
  voteCount: Int
  votes: [vote]
}

type candidatesElection {
  candidate: [candidate]
  candidate_id: Int!
  election: [election]
  election_id: String!
  running_as: String
}

type election {
  by_election_cause: String
  by_election_general: String
  candidates_elections: [candidatesElection]
  constituency: String
  contested: String
  countyboroughuniv: String
  election_date: DateTime
  election_month: String
  election_year: String
  franchise_detail: String
  franchise_type: String
  latitude: String
  longitude: String
  notes: String
  poll_books: [poll_books]
}

type electionDates {
  election: [election]
  election_date: DateTime
  election_id: String!
}

type election_group_by {
  by_election_cause: String
  by_election_general: String
  constituency: String
  contested: String
  countyboroughuniv: String
  election_month: String
  election_year: Int
  franchise_type: String
  id: Int
  value: aggregate
}

type locations {
  lat: Float
  lng: Float
  location_type: String
  name_long: String
  name_short: String
}

type poll_books {
  Citation: String
  ElectionCode: String
  Holdings: String
  Notes: String
  PollBookCode: String
  PrintMS: String
  Source: String
}

type vote {
  candidate: [candidate]
  line: String
  page: String
  voter(forename: String, guild: String, occupation: String, surname: String): [voter]
}

type voter {
  abode: String
  city: String
  class: String
  county: String
  forename: String
  guild: String
  notes: String
  occupation: String
  parish: String
  street: String
  suffix: String
  surname: String
  title: String
  vote: [vote]
}
